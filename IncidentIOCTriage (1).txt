{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::all"
        ],
        "parameters": [
          {
            "id": "903a0628-df2f-4a7d-93ac-80fbf48032ec",
            "version": "KqlParameterItem/1.0",
            "name": "InternalWSs",
            "type": 1,
            "isRequired": true,
            "query": "where type =~ \"Microsoft.OperationsManagement/solutions\"\r\n| where name startswith \"SecurityInsights\"\r\n| parse id with * '(' WSName ')' *\r\n| take 1\r\n| project WSName",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 2592000000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "8c7b9fc5-b87f-44d7-9cc8-bec025faf2c2",
            "version": "KqlParameterItem/1.0",
            "name": "DefaultSubscription_Internal",
            "type": 1,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| take 1\r\n| project subscriptionId",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f046681a-d502-4370-9a04-736042ed7e47",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "description": "Select a maximum of 100 total resource to query",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| summarize by subscriptionId\r\n| project value = strcat(\"/subscriptions/\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription_Internal}', true, false)",
            "crossComponentResources": [
              "value::all"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "limitSelectTo": 100,
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "ef68dc9e-94e2-47c9-bfc8-8206537418a8",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "description": "Select a maximum of 100 total resources to query",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "//resources\r\n//| where type =~ 'microsoft.operationalinsights/workspaces'\r\n//| project id\r\n\r\nwhere type =~ 'microsoft.operationalinsights/workspaces'\r\n| project value =id, label = name, selected = iff(name =~ '{InternalWSs}', true, false)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "limitSelectTo": 100,
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f9f6427d-1903-4ebc-9c48-86846ec36119",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 172800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "ddb7df85-73e6-4a6a-9201-a82c08739c98",
            "version": "KqlParameterItem/1.0",
            "name": "InvestigateBy",
            "label": "Investigate By",
            "type": 10,
            "description": "Investigate Incidents or Entities",
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n{\"value\": \"Entity\", \"label\": \"Entity\" },\r\n {\"value\": \"Incident\", \"label\": \"Incident\", \"selected\":true},\r\n { \"value\": \"Bookmark\", \"label\": \"Bookmark\"}\r\n]\r\n",
            "timeContext": {
              "durationMs": 480000,
              "endTime": "2021-01-14T21:08:00.000Z"
            },
            "timeContextFromParameter": "TimeRange",
            "value": "Entity"
          },
          {
            "id": "5c093daf-515c-45be-a1e4-4b14d211c0eb",
            "version": "KqlParameterItem/1.0",
            "name": "IncidentView",
            "label": "Show Incident Trend",
            "type": 10,
            "description": "Show incident view or not?",
            "isRequired": true,
            "query": "datatable(IncidentView:string, InvestigateBy:string)\r\n\t[\"Yes\", \"Incident\",\r\n\t\"No\", \"Incident\"]\r\n| where InvestigateBy =~ \"{investigateBy}\" or IncidentView == \"No\"\r\n| project IncidentView",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 480000,
              "endTime": "2021-01-14T21:08:00.000Z"
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "44663fe5-5c34-4620-b87c-78fd566ebc2c",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "type": 10,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true },\r\n { \"value\": \"Change Log\", \"label\": \"Change Log\"}\r\n]"
          },
          {
            "id": "080aebcf-c127-49ea-af49-cdc32888ee08",
            "version": "KqlParameterItem/1.0",
            "name": "DefaultUPNSuffix",
            "type": 1,
            "description": "When extracting the account entity from an alert, if no UPN suffix is included, this suffix will be assumed.",
            "value": "",
            "isHiddenWhenLocked": true
          },
          {
            "id": "19a40f6a-2429-480f-bc34-067b602d1fa8",
            "version": "KqlParameterItem/1.0",
            "name": "AlertID",
            "type": 1,
            "description": "This parameter should be left blank",
            "isHiddenWhenLocked": true
          },
          {
            "id": "0c774c1b-f434-480d-ae82-078f7665f11d",
            "version": "KqlParameterItem/1.0",
            "name": "EntityData",
            "type": 1,
            "description": "This parameter should be left blank",
            "isHiddenWhenLocked": true
          },
          {
            "id": "d663ab0d-fc80-40a5-9d76-71a7401d7324",
            "version": "KqlParameterItem/1.0",
            "name": "EntityType",
            "type": 1,
            "description": "This parameter should be left blank",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "GlobalParameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "1d5c2652-b0dc-4371-a0c6-63d8b395fa34",
            "cellValue": "InvestigationType",
            "linkTarget": "parameter",
            "linkLabel": "Incident Dashboard",
            "subTarget": "Incident",
            "style": "link"
          },
          {
            "id": "7720a8f8-10e8-4be3-b980-fe6d6bb45b6d",
            "cellValue": "InvestigationType",
            "linkTarget": "parameter",
            "linkLabel": "IOC Triage",
            "subTarget": "Search",
            "style": "link"
          },
          {
            "id": "958dc088-2b65-464b-9f8c-2e435cc6f771",
            "cellValue": "InvestigationType",
            "linkTarget": "parameter",
            "linkLabel": "Entity Insights",
            "subTarget": "Entity",
            "style": "link"
          },
          {
            "id": "b719061b-a2dc-42a6-ba3e-4116f81d5ece",
            "cellValue": "InvestigationType",
            "linkTarget": "parameter",
            "linkLabel": "Defender for Office 365",
            "subTarget": "Office",
            "style": "link"
          },
          {
            "id": "69060f44-44e1-47f1-b670-7a0776eaffdf",
            "cellValue": "InvestigationType",
            "linkTarget": "parameter",
            "linkLabel": "Custom KQL",
            "subTarget": "Hunting",
            "style": "link"
          }
        ]
      },
      "customWidth": "50",
      "name": "InvestigationLinks"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "b033ee75-c0c4-452d-99e4-3495879bb9c3",
                  "version": "KqlParameterItem/1.0",
                  "name": "SelectSeverity",
                  "label": "Incident Severity",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let SortOrder = datatable(Value:string, SortOrder:int)\r\n[\"High\", 1, \"Medium\", 2, \"Low\", 3, \"Informational\", 4];\r\n(union isfuzzy=true\r\nSecurityIncident\r\n| where CreatedTime {TimeRange:value}\r\n| summarize arg_max(TimeGenerated,*) by IncidentNumber\r\n| summarize Count=dcount(IncidentNumber) by Severity\r\n| extend Label = strcat(Severity,\" [\",Count,\"]\")\r\n| project Label, Value=Severity\r\n)\r\n| distinct  Value, Label\r\n| join kind=leftouter SortOrder on Value\r\n| project Value, Label",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e7dc6b7f-4d3f-4e58-ac89-1fb610276592",
                  "version": "KqlParameterItem/1.0",
                  "name": "Status",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "(union isfuzzy=true\r\nSecurityIncident\r\n| where CreatedTime {TimeRange:value}\r\n)\r\n| distinct Status\r\n| sort by Status asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "ffdd91be-dd7f-4a4c-a96d-50086bc6e8c4",
                  "version": "KqlParameterItem/1.0",
                  "name": "Owner",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "(union isfuzzy=true\r\nSecurityIncident\r\n| where CreatedTime {TimeRange:value}\r\n| project _Owner=tostring(Owner.userPrincipalName)\r\n| parse kind = regex _Owner with \"(.*?)\" Owner \"(.*?)\" Nonsense\r\n)\r\n| sort by Owner asc\r\n| extend Owner = iff(isnotempty( Owner), Owner, \"Unassigned\")\r\n| distinct Owner",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0329a079-dd67-4667-a27a-bbbaf82c74ac",
                  "version": "KqlParameterItem/1.0",
                  "name": "Tags",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "(union isfuzzy=true\r\nSecurityIncident\r\n| where CreatedTime {TimeRange:value}\r\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\r\n| mv-expand Labels\r\n| project Tags=tostring(Labels.labelName)\r\n)\r\n| distinct Tags\r\n| sort by Tags asc\r\n| union (datatable(Tags:string)[\"Untagged\"])",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "6f670cd4-9402-43d3-a407-9e20f80834bd",
                  "version": "KqlParameterItem/1.0",
                  "name": "IncidentNumber",
                  "label": "Incident Number",
                  "type": 1,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": ""
                },
                {
                  "id": "9708a4d0-69b5-4ec9-b6f3-ac88de5837cb",
                  "version": "KqlParameterItem/1.0",
                  "name": "SearchString",
                  "type": 1,
                  "description": "'*' returns all results",
                  "isRequired": true,
                  "value": "'*'"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "55",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Incident"
            },
            "name": "parameters - 17"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityIncident\r\n| where CreatedTime {TimeRange}\r\n| where IncidentNumber == \"{IncidentNumber}\" or isempty(\"{IncidentNumber}\")\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| project-reorder CreatedTime, Status, IncidentNumber\r\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\r\n| summarize Count = count() by Status\r\n",
              "size": 3,
              "title": "Incident Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Status",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "customWidth": "40",
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedTags = dynamic([{Tags}]);\r\nSecurityIncident\r\n| summarize arg_max(TimeGenerated,*) by tostring(IncidentNumber)\r\n| where IncidentNumber == \"{IncidentNumber}\" or isempty(\"{IncidentNumber}\")\r\n| where Severity in ({SelectSeverity})\r\n| where Status in ({Status})\r\n| where Labels has_any(selectedTags) or (selectedTags has_any(\"Untagged\") and array_length(Labels) == 0)\r\n| extend Alerts = extract(\"\\\\[(.*?)\\\\]\", 1, tostring(AlertIds))\r\n| mv-expand AlertIds to typeof(string)\r\n| join \r\n(\r\n    SecurityAlert\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n    | extend AlertEntities = parse_json(Entities)\r\n    | extend ParseEntities = tostring(parse_json(Entities))\r\n    | extend EntitiesAddress = extract_all(@'\"Address\":\"(.*?)\"', ParseEntities)\r\n    | extend EntitiesHostName = extract_all(@'\"HostName\":\"(.*?)\"', ParseEntities)\r\n    | extend EntitiesName = extract_all(@'\"Name\":\"(.*?)\"', ParseEntities)\r\n    | mv-expand AlertEntities\r\n    | extend sortOrder = case \r\n      ( \r\n        AlertEntities.Type == \"account\",1, AlertEntities.Type == \"host\",2, AlertEntities.Type == \"ip\",3, AlertEntities.Type == \"url\",4, 99\r\n      ) \r\n    | order by sortOrder asc    \r\n) on $left.AlertIds == $right.SystemAlertId\r\n| extend _Owner=tostring(Owner.userPrincipalName)\r\n| parse kind = regex _Owner with \"(.*?)\" Owner \"(.*?)\" Nonsense\r\n| summarize AlertCount=dcount(AlertIds), entityList=make_set(tostring(AlertEntities.Type)) by IncidentNumber, CreatedTime, Status, Severity, Title, Address = tostring(EntitiesAddress), Name = tostring(EntitiesName), HostName = tostring(EntitiesHostName), Entities, Alerts, IncidentUrl, Owner, Tactics =tostring(AdditionalData.tactics), Tenant, ProductName, ProductComponentName, TimeGenerated\r\n//Convert UTC to Local Time\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n// set column order\r\n| project TimeGenerated, IncidentNumber, CreatedTime, Status, Severity, Title, Owner, IncidentUrl, Tactics, Tenant, Alerts, ProductName, ProductComponentName, HostName, Address, Name, Entities\r\n| where Owner in ({Owner}) or (isempty(Owner) and \"Unassigned\" in ({Owner}))\r\n| summarize arg_max(TimeGenerated,*) by tostring(IncidentNumber)\r\n| search ({SearchString})\r\n| project-away $table\r\n| order by IncidentNumber desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Incident Details - {TimeRange:label}",
              "timeContextFromParameter": "TimeRange",
              "exportedParameters": [
                {
                  "fieldName": "IncidentNumber",
                  "parameterName": "INexport",
                  "parameterType": 1
                },
                {
                  "fieldName": "Alerts",
                  "parameterName": "Alerts",
                  "parameterType": 1
                },
                {
                  "fieldName": "field name",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "New",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Active",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Closed",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "warning",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "info",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "IncidentUrl",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "Open Incident in the Azure Sentinel Portal"
                    }
                  }
                ],
                "rowLimit": 500,
                "filter": true
              }
            },
            "customWidth": "75",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Incident"
            },
            "name": "IncidentDetailsView"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AlertEntities = SecurityAlert\r\n| where SystemAlertId == {Alerts}\r\n| where TimeGenerated {TimeRange}\r\n| extend AlertEntities = parse_json(Entities)\r\n| mv-expand AlertEntities\r\n| where isnotempty(AlertEntities)\r\n| project AlertEntities;\r\nlet filehashEntities = AlertEntities\r\n| where AlertEntities.Type =~ \"filehash\"\r\n| extend Entity = tostring(AlertEntities.Value)\r\n| extend EntityType = strcat(tostring(AlertEntities.Type), \"-\", tostring(AlertEntities.Algorithm))\r\n| distinct Entity, EntityType;\r\nlet fileEntities = AlertEntities\r\n| where AlertEntities.Type == \"file\"\r\n| extend Entity = strcat(tostring(AlertEntities.Directory), \"\\\\\", tostring(AlertEntities.Name))\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet nestedFileHashEntities = AlertEntities\r\n| where AlertEntities.Type =~ \"file\"\r\n| where isnotempty(AlertEntities.FileHashes)\r\n| mv-expand hashes=AlertEntities.FileHashes\r\n| extend Entity = tostring(hashes.Value)\r\n| extend EntityType = strcat(tostring(hashes.Type), \"-\", tostring(hashes.Algorithm))\r\n| distinct Entity, EntityType;\r\nlet IPEntities = AlertEntities\r\n| where AlertEntities.Type == \"ip\"\r\n| extend Entity = tostring(AlertEntities.Address)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet AccountEntities = AlertEntities\r\n| where AlertEntities.Type == \"account\"\r\n| extend Entity = iff(isnotempty(AlertEntities.UPNSuffix), strcat(AlertEntities.Name, '@', AlertEntities.UPNSuffix), AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet HostEntities = AlertEntities\r\n| where AlertEntities.Type == \"host\"\r\n| extend Entity = iff(isnotempty(AlertEntities.DnsDomain), strcat(AlertEntities.HostName, '.', AlertEntities.DnsDomain), AlertEntities.HostName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet appEntities = AlertEntities\r\n| where AlertEntities.Type == \"cloud-application\"\r\n| extend Entity = tostring(AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet azresEntities = AlertEntities\r\n| where AlertEntities.Type == \"azure-resource\"\r\n| extend Entity = tostring(AlertEntities.ResourceId)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet malwareEntities = AlertEntities\r\n| where AlertEntities.Type == \"malware\"\r\n| extend Entity = tostring(AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet domResIdEntities = AlertEntities\r\n| where AlertEntities.Type == \"DomainResourceIdentifier\"\r\n| extend Entity = tostring(AlertEntities.ResourceName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet dnsEntities = AlertEntities\r\n| where AlertEntities.Type == \"dns\"\r\n| extend Entity = tostring(AlertEntities.DomainName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet ProcessCommandLineEntities = AlertEntities\r\n| where AlertEntities.Type == \"process\"\r\n| extend Entity = tostring(AlertEntities.CommandLine)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nAlertEntities\r\n| where AlertEntities.Type == \"url\"\r\n| extend Entity = tostring(AlertEntities.Url)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType\r\n| union IPEntities, AccountEntities, ProcessCommandLineEntities, HostEntities, filehashEntities, fileEntities, nestedFileHashEntities, appEntities, azresEntities, malwareEntities, domResIdEntities, dnsEntities\r\n| where isnotempty(Entity)\r\n| order by EntityType asc",
              "size": 0,
              "showAnalytics": true,
              "title": "Incident Entities",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Field",
                  "formatter": 1
                },
                "rightContent": {
                  "columnMatch": "Value"
                },
                "showBorder": true,
                "size": "auto"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Incident"
            },
            "name": "IncidentEntities"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityIncident\r\n| where CreatedTime {TimeRange}\r\n| where IncidentNumber == \"{IncidentNumber}\" or isempty(\"{IncidentNumber}\")\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| summarize IncidentCount=dcount(IncidentNumber) by bin(datetime_utc_to_local(CreatedTime, 'America/New_York'), {TimeRange:grain}), Tenant",
              "size": 1,
              "showAnalytics": true,
              "title": "Incident Timeline",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart",
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Tenant",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "IncidentCount",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Incident"
            },
            "name": "IncidentByTime"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "InvestigationType",
        "comparison": "isEqualTo",
        "value": "Incident"
      },
      "name": "IncidentViewGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "IOC Triage",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "2c1b6b11-5831-4548-90f1-99ddf942a45a",
                  "version": "KqlParameterItem/1.0",
                  "name": "SearchString",
                  "type": 1,
                  "description": "Wrap each string in 'example'. Use Boolean and/or to include multiple strings.",
                  "isRequired": true,
                  "value": "'*'",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "4c157722-42dc-4ceb-97d4-7c772f287aba",
                  "version": "KqlParameterItem/1.0",
                  "name": "Table",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "query": "Usage\r\n| where TimeGenerated >= ago(7d)\r\n| distinct DataType\r\n//| where DataType has_any ('AuditLogs', 'AzureActivity', 'DnsEvents', 'F5Telemetry_ASM_CL', 'SecurityAlert', 'SecurityEvent', 'SecurityIncident', 'SigninLogs', 'Syslog', 'ThreatIntelligenceIndicator', 'VMConnection', 'VMProcess', 'W3CIISLog', 'WireData')\r\n//| where DataType != 'F5Telemetry_syslog_CL'\r\n| sort by DataType asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "IOCSearchParameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityIncident\r\n| summarize arg_max(TimeGenerated, *) by tostring(IncidentNumber)\r\n| extend Alerts = extract(\"\\\\[(.*?)\\\\]\", 1, tostring(AlertIds))\r\n| mv-expand AlertIds to typeof(string)\r\n| join \r\n    (\r\n    SecurityAlert\r\n    | extend AlertEntities = parse_json(Entities)\r\n    | extend ParseEntities = tostring(parse_json(Entities))\r\n    | extend EntitiesAddress = extract_all(@'\"Address\":\"(.*?)\"', ParseEntities)\r\n    | extend EntitiesHostName = extract_all(@'\"HostName\":\"(.*?)\"', ParseEntities)\r\n    | extend EntitiesName = extract_all(@'\"Name\":\"(.*?)\"', ParseEntities))\r\n    on $left.AlertIds == $right.SystemAlertId\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| where not(ProductComponentName has 'Scheduled Alerts' and Tenant has_any ('hos-0-security-law', 'ace-e-op-loganalytics', 'ops-sentinel-loganalytics', 'ops-loganalytics-fmhphr'))\r\n| extend _Owner=tostring(Owner.userPrincipalName)\r\n| parse kind = regex _Owner with \"(.*?)\" Owner \"(.*?)\" Nonsense\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project\r\n    TimeGenerated,\r\n    CreatedTime,\r\n    IncidentNumber,\r\n    Severity,\r\n    Status,\r\n    Title,\r\n    Owner,\r\n    IncidentUrl,\r\n    Tactics,\r\n    Tenant,\r\n    ProductName,\r\n    ProductComponentName,\r\n    Alerts,\r\n    EntitiesHostName,\r\n    EntitiesAddress,\r\n    EntitiesName,\r\n    Entities\r\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\r\n| search ({SearchString})\r\n| sort by IncidentNumber desc\r\n| project-away $table",
              "size": 0,
              "showAnalytics": true,
              "title": "Security Alerts - {TimeRange}",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Alerts",
              "exportParameterName": "Alerts",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "error",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "New",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Active",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Closed",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "IncidentUrl",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "Open Incident in the Azure Sentinel Portal"
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "75",
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AlertEntities = SecurityAlert\r\n| where SystemAlertId == {Alerts}\r\n| where TimeGenerated {TimeRange}\r\n| extend AlertEntities = parse_json(Entities)\r\n| mv-expand AlertEntities\r\n| where isnotempty(AlertEntities)\r\n| project AlertEntities;\r\nlet filehashEntities = AlertEntities\r\n| where AlertEntities.Type =~ \"filehash\"\r\n| extend Entity = tostring(AlertEntities.Value)\r\n| extend EntityType = strcat(tostring(AlertEntities.Type), \"-\", tostring(AlertEntities.Algorithm))\r\n| distinct Entity, EntityType;\r\nlet fileEntities = AlertEntities\r\n| where AlertEntities.Type == \"file\"\r\n| extend Entity = strcat(tostring(AlertEntities.Directory), \"\\\\\", tostring(AlertEntities.Name))\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet nestedFileHashEntities = AlertEntities\r\n| where AlertEntities.Type =~ \"file\"\r\n| where isnotempty(AlertEntities.FileHashes)\r\n| mv-expand hashes=AlertEntities.FileHashes\r\n| extend Entity = tostring(hashes.Value)\r\n| extend EntityType = strcat(tostring(hashes.Type), \"-\", tostring(hashes.Algorithm))\r\n| distinct Entity, EntityType;\r\nlet IPEntities = AlertEntities\r\n| where AlertEntities.Type == \"ip\"\r\n| extend Entity = tostring(AlertEntities.Address)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet AccountEntities = AlertEntities\r\n| where AlertEntities.Type == \"account\"\r\n| extend Entity = iff(isnotempty(AlertEntities.UPNSuffix), strcat(AlertEntities.Name, '@', AlertEntities.UPNSuffix), AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet HostEntities = AlertEntities\r\n| where AlertEntities.Type == \"host\"\r\n| extend Entity = iff(isnotempty(AlertEntities.DnsDomain), strcat(AlertEntities.HostName, '.', AlertEntities.DnsDomain), AlertEntities.HostName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet appEntities = AlertEntities\r\n| where AlertEntities.Type == \"cloud-application\"\r\n| extend Entity = tostring(AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet azresEntities = AlertEntities\r\n| where AlertEntities.Type == \"azure-resource\"\r\n| extend Entity = tostring(AlertEntities.ResourceId)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet malwareEntities = AlertEntities\r\n| where AlertEntities.Type == \"malware\"\r\n| extend Entity = tostring(AlertEntities.Name)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet domResIdEntities = AlertEntities\r\n| where AlertEntities.Type == \"DomainResourceIdentifier\"\r\n| extend Entity = tostring(AlertEntities.ResourceName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nlet dnsEntities = AlertEntities\r\n| where AlertEntities.Type == \"dns\"\r\n| extend Entity = tostring(AlertEntities.DomainName)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType;\r\nAlertEntities\r\n| where AlertEntities.Type == \"url\"\r\n| extend Entity = tostring(AlertEntities.Url)\r\n| extend EntityType = tostring(AlertEntities.Type)\r\n| distinct Entity, EntityType\r\n| union IPEntities, AccountEntities, HostEntities, filehashEntities, fileEntities, nestedFileHashEntities, appEntities, azresEntities, malwareEntities, domResIdEntities, dnsEntities\r\n| where isnotempty(Entity)\r\n| order by EntityType asc",
              "size": 0,
              "title": "Entities from Selected Incident",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "customWidth": "25",
            "name": "Entities from Selected Incident"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityIncident\r\n| where CreatedTime {TimeRange}\r\n| where IncidentNumber == \"{IncidentNumber}\" or isempty(\"{IncidentNumber}\")\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| summarize IncidentCount=dcount(IncidentNumber) by bin(datetime_utc_to_local(CreatedTime, 'America/New_York'), {TimeRange:grain}), Tenant\r\n| search ({SearchString})",
              "size": 0,
              "showAnalytics": true,
              "title": "Alert Timeline",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart"
            },
            "customWidth": "75",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "(union isfuzzy=true\r\n(SecurityIncident\r\n//| summarize IncidentCount=count() by TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\r\n| extend Alerts = extract(\"\\\\[(.*?)\\\\]\", 1, tostring(AlertIds))\r\n| mv-expand AlertIds to typeof(string)\r\n| join \r\n(\r\n    SecurityAlert\r\n) on $left.AlertIds == $right.SystemAlertId)\r\n)\r\n| search ({SearchString})\r\n| summarize Count=count() by Title\r\n| sort by Count desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Top Incident Signatures {TimeRange}",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "customWidth": "25",
            "name": "query - 7"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "search in ({Table}) ({SearchString})\r\n| summarize Count=count() by $table\r\n| sort by Count desc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Click on a Tile to View Logs",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "$table",
              "exportParameterName": "SelectedTable",
              "exportDefaultValue": "Usage",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "$table",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "name": "Click on a Tile to View Logs"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "search in ({SelectedTable}) ({SearchString})\r\n| project-away TenantId, $table\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Selected Table",
              "noDataMessage": "Select a tile to see detailed results.",
              "noDataMessageStyle": 2,
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "67",
            "name": "query - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AADNonInteractiveUserSignInLogs\r\n| union\r\n    AADNonInteractiveUserSignInLogs,\r\n    AADProvisioningLogs,\r\n    AADServicePrincipalSignInLogs,\r\n    ADFSSignInLogs\r\n| union (SigninLogs\r\n    | extend Tenant = case(TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n    | extend ParsedDetails = parse_json(AuthenticationDetails)\r\n    | extend AuthMethod = ParsedDetails[0].authenticationMethodDetail\r\n        , Location = strcat(LocationDetails.city, \", \", LocationDetails.state, \", \", LocationDetails.countryOrRegion)\r\n        , StatusCode = tostring(Status.errorCode)\r\n        , StatusDetails = tostring(Status.additionalDetails)) \r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| extend StatusDetails = iff((StatusCode in ('50074')), \"MFA Failed\", StatusDetails)\r\n| project\r\n    TimeGenerated,\r\n    Identity,\r\n    UserPrincipalName,\r\n     IPAddress,\r\n     Location,\r\n    ResultType,\r\n    ResultDescription,\r\n    StatusDetails_CF,\r\n    AuthenticationRequirement,\r\n    AppDisplayName,\r\n    ResourceDisplayName,\r\n    UserAgent,\r\n    AuthMethod,\r\n    AuthenticationDetails,\r\n    RiskDetail,\r\n    Resource,\r\n    Tenant\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "AAD SignIn Logs",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "60",
            "name": "query - 17",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "IdentityInfo\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, AccountName, AccountUPN, GroupMembership, Department, JobTitle, Manager, StreetAddress, City, State, Phone, IsAccountEnabled, UserType\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Identity Info",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "40",
            "name": "Identity Info",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "BehaviorAnalytics\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, ActivityType, ActionType, UserName, UserPrincipalName, InvestigationPriority, UsersInsights, DevicesInsights, ActivityInsights, EventSource, SourceIPAddress, SourceIPLocation\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "UEBA - Behavior Analytics",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "UEBA - Behavior Analytics",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Anomalies\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, RuleName, Score, Description, Tactics, UserName, UserPrincipalName, Entities, ExtendedProperties, AnomalyDetails\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "UEBA - Anomalies",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Anomalies",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "(union isfuzzy=true\r\n(AzureActivity\r\n| search ({SearchString})\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n))\r\n| project-reorder TimeGenerated, Caller, CallerIpAddress, OperationNameValue, Properties, ResourceGroup, ActivityStatusValue, CategoryValue, Level, _ResourceId\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Azure Activity",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 17 - Copy",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "(union isfuzzy=true\r\n    (AuditLogs\r\n| search ({SearchString})\r\n| extend UserPrincipal = parse_json(InitiatedBy.user.userPrincipalName)\r\n\t, ServicePrincipal = parse_json(InitiatedBy.app.servicePrincipalName)\r\n\t, Result = strcat(Result, \" - \", ResultDescription)\r\n\t, TargetUser = parse_json(TargetResources[0].userPrincipalName)\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n    )\r\n)\r\n| project TimeGenerated, OperationName, Category, UserPrincipal, TargetUser, ServicePrincipal, Result, Resource, InitiatedBy, TargetResources\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Azure Audit Logs",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 17 - Copy - Copy",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| search ({SearchString})\r\n| summarize Count=count() by Account\r\n| sort by Count desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Windows Account Activity (Count)",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "25",
            "name": "Windows Account Activity (Count)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| search ({SearchString})\r\n| summarize Count=count() by Activity\r\n| sort by Count desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Windows Security Event Codes",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "25",
            "name": "Windows Security Event Codes"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| search ({SearchString})\r\n| parse _ResourceId with \"/subscriptions/\" Subscription\r\n    \"/resourcegroups/\" ResourceGroup\r\n    \"/providers/\" Providers\r\n    \"/virtual\" VMType\r\n    \"/\" VM\r\n| extend Tenant = case(TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n//| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder\r\n    TimeGenerated,\r\n    Computer,\r\n    WorkstationName,\r\n    Account,\r\n    Activity,\r\n    FailureReason,\r\n    SubStatus,\r\n    ResourceGroup,\r\n    _ResourceId,\r\n    Tenant,\r\n    LogonTypeName,\r\n    FileHash,\r\n    FilePath,\r\n    CommandLine,\r\n    IpAddress,\r\n    IpPort,\r\n    ClientIPAddress,\r\n    CallerProcessName\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Windows Security Events (Timeline)",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "Windows Security Events (Timeline)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "DnsEvents\r\n| search ({SearchString})\r\n| where isnotempty(Name)\r\n| summarize Count=count() by Name\r\n| sort by Count desc",
              "size": 0,
              "showAnalytics": true,
              "title": "DNS Queries (Count)",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "DNS Queries (Count)",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "DnsEvents\r\n| search ({SearchString})\r\n| where isnotempty(Name)\r\n| parse _ResourceId with \"/subscriptions/\" Subscription\r\n    \"/resourcegroups/\" ResourceGroup\r\n    \"/providers/\" Providers\r\n    \"/virtual\" VMType\r\n    \"/\" VM\r\n| extend Tenant = case(TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project\r\n    TimeGenerated,\r\n    Computer,\r\n    ClientIP,\r\n    Name,\r\n    IPAddress=IPAddresses,\r\n    Subscription,\r\n    ResourceGroup,\r\n    Resource=_ResourceId,\r\n    Tenant,\r\n    Type\r\n| sort by TimeGenerated desc\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "DNS (Timeline)",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "$gen_date_TimeGenerated_0",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_date_TimeGenerated_0",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "70",
            "name": "DNS (Timeline)",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "eset_CL\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, event_s, severity_s, action_taken_s, action_s, source_address_s, target_address_s, object_uri_s, rule_id_s, username_s, hostname_s, process_name_s\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Eset SMC",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "25",
            "name": "Eset SMC",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Palo Alto Networks\"\r\n| where DeviceProduct has \"PAN-OS\"\r\n| search ({SearchString})\r\n| extend Tenant = case(TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| extend RequestURL = trim(@\"\"\"\", RequestURL)\r\n| summarize Count = count() by DeviceAction, RequestURL, DestinationIP\r\n| sort by Count desc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "PAN-OS (Count)",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "25",
            "name": "PAN-OS (Count)",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Palo Alto Networks\"\r\n| where DeviceProduct has \"PAN-OS\"\r\n| search ({SearchString})\r\n| extend Tenant = case(TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| extend RequestURL = trim(@\"\"\"\", RequestURL)\r\n| project-reorder TimeGenerated, DeviceEventClassID, Activity, DeviceAction, RequestURL, SourceIP, SourcePort, SourceUserName, DestinationIP, DestinationPort, Protocol, DeviceName, DeviceProduct, Tenant\r\n| sort by TimeGenerated desc\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "PAN-OS (Timeline)",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "PAN-OS (Timeline)",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "StorageFileLogs\r\n| union StorageBlobLogs, StorageTableLogs, StorageQueueLogs\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, Type, AccountName, Category, OperationName, Uri, CallerIpAddress, AuthenticationType, StatusCode, StatusText, UserAgentHeader, ServiceType\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Storage Account Logs",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Storage Account Logs",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureDiagnostics\r\n| where ResourceProvider == 'MICROSOFT.SQL'\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project TimeGenerated, ResourceId, LogicalServerName_s, ResourceGroup, Category, OperationName\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Azure SQL Logs",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Azure SQL Logs",
            "styleSettings": {
              "margin": "33"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "OfficeActivity\r\n| search ({SearchString})\r\n| extend Tenant = case( TenantId == '11e01045-32b0-4603-ab6a-146e1b4ba625', \"AFS IT Gov Prod\", \"NA\")\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, OfficeWorkload, UserId, ClientIP, RecordType, Operation, OfficeObjectId, ResultStatus\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Office Activity",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500,
                "sortBy": [
                  {
                    "itemKey": "TimeGenerated",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "TimeGenerated",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "50",
            "name": "Office Activity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VMwareESXi\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, Computer, HostIP, Facility, SyslogMessage, ProcessName, ProcessID\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "VMWareESXi: Syslog",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "VMWareESXi: Syslog (All)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VMwareNSXT\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "VMware NSXT: Firewall Logs",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "VMware NSXT: Firewall Logs (Syslog)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Syslog\r\n| where Computer == 'PEG-P-P-1-APOLLO-US-E-1-MDCOURTS-VAULT-BLUE'\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, Computer, SyslogMessage\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "CyberArk Password Vault",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "CyberArk Password Vault"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "KiwiLogin\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| search ({SearchString})\r\n| project TimeGenerated, LogType, IPAddress=Computer, User, SourceIP, Port, SyslogMessage\r\n| sort by TimeGenerated desc\r\n| join (_GetWatchlist('network_devices')\r\n| project IPAddress=SearchKey, DeviceName=['Device Name'], DeviceType=['Device Type'], GroupName=['Group Name'])\r\non IPAddress\r\n| project TimeGenerated, LogType, DeviceName, User, SourceIP, Port, DeviceType, DeviceIP=IPAddress, GroupName",
              "size": 0,
              "showAnalytics": true,
              "title": "Networking Devices: Login Activity",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "33",
            "name": "Networking Devices: Login Activity (Syslog Kiwi)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "PANAuth\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| search ({SearchString})\r\n| project TimeGenerated, Computer, Event, UserName, SourceIP, ServerIP, AuthProfile, ProcessName, HostName, SyslogMessage\r\n| sort by TimeGenerated desc\r\n         ",
              "size": 0,
              "showAnalytics": true,
              "title": "Palo Alto Login Activity",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "33",
            "name": "Palo Alto Login Activity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "vCenterLogin\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| search ({SearchString})\r\n| sort by TimeGenerated desc\r\n         ",
              "size": 0,
              "showAnalytics": true,
              "title": "vCenter Login Activity",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "33",
            "name": "vCenter Login Activity (Syslog)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "ThreatIntelligenceIndicator\r\n| search ({SearchString})\r\n| extend TimeGenerated = datetime_utc_to_local(TimeGenerated, 'America/New_York')\r\n| project-reorder TimeGenerated, Action, Description, NetworkIP, DomainName, Url, FileHashValue, FileHashType, EmailSenderAddress, TrafficLightProtocolLevel, IndicatorId, SourceSystem\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Threat Intel Feeds (Last 30 Days)",
              "timeContext": {
                "durationMs": 2592000000
              },
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "Threat Intel Feeds"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "QualysHostDetectionV2_CL\r\n| where TimeGenerated between ( datetime(2023-04-25) .. now() )\r\n| extend Qid=QID_s,\r\nHost = extract(\"^([^.]+)\", 1, DnsName_s)\r\n| extend DetectionID = strcat(Host, \": \", QID_s)\r\n| project-reorder TimeGenerated, DetectionID, HostId_s, DnsName_s, IPAddress, Qid, Status_s, Severity_s, Results_0_s\r\n| join kind=leftouter (QualysKB\r\n| where TimeGenerated >= ago(180d)\r\n| extend Consequence = Consquence\r\n| project-reorder Qid, Title, Category, Consequence, Diagnosis, Patchable, CveId, CveUrl, VendorReferenceUrl, SoftwareProduct, SoftwareVendor, Solution, DiscoveryAdditionalInfo, DiscoveryRemote, DiscoverAuthType) \r\non Qid\r\n| search ({SearchString})\r\n| summarize arg_max(TimeGenerated, *) by DetectionID\r\n| project-reorder TimeGenerated, DetectionID, IPAddress, Qid, Title, Status_s, Category, Consequence, Diagnosis, CveId, CveUrl, Severity_s, Type_s, Results_0_s, LastFound_t, FirstFound_t, DnsName_s, OperatingSystem_s",
              "size": 0,
              "showAnalytics": true,
              "title": "Qualys Vulnerability Findings",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 500
              }
            },
            "customWidth": "50",
            "name": "Qualys Vulnerability Findings"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InvestigationType",
        "comparison": "isEqualTo",
        "value": "Search"
      },
      "name": "Search"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Defender for Office",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Microsoft Defender for Office 365\n---\n"
            },
            "name": "text - 2"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "### Email Event Analysis Workbook, version 0.2\r\n\r\nauthor: Brian Delaney, MSFT\r\n\r\nRelease Notes:\r\n\r\n1.0 - Oct 18, 2021\r\n- Initial Release\r\n",
                    "style": "info"
                  },
                  "name": "text - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "About",
              "comparison": "isEqualTo",
              "value": "Show"
            },
            "name": "AboutGroup"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "48578fe1-da47-4a4c-b495-ce7fe24ce495",
                  "cellValue": "Nav",
                  "linkTarget": "parameter",
                  "linkLabel": "By Email",
                  "subTarget": "Email",
                  "style": "link"
                },
                {
                  "id": "30e93159-8bf5-4006-820f-406ea10bcd17",
                  "cellValue": "Nav",
                  "linkTarget": "parameter",
                  "linkLabel": "By Attachment",
                  "subTarget": "Attachments",
                  "style": "link"
                },
                {
                  "id": "c40f76ed-94be-40ff-b65b-3fda306f2c3d",
                  "cellValue": "Nav",
                  "linkTarget": "parameter",
                  "linkLabel": "By Url",
                  "subTarget": "Url",
                  "style": "link"
                }
              ]
            },
            "name": "links - 8"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "d6592a34-1ae6-4128-9a72-b9aa6295a0c7",
                        "version": "KqlParameterItem/1.0",
                        "name": "EmailDirection",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| summarize Count=count() by EmailDirection\r\n| sort by Count desc\r\n| project EmailDirection, Label=strcat(EmailDirection, ' - ', Count, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "e63f1a36-a44c-4936-8ad9-30bc7d8587d4",
                        "version": "KqlParameterItem/1.0",
                        "name": "Sender",
                        "label": "Sender Email",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      },
                      {
                        "id": "175b1a45-d1f0-4e23-b1dd-a19afab7ef7b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Recipient",
                        "label": "Recipient Email",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "08bf6816-f40b-46d3-b526-25c846728374",
                        "version": "KqlParameterItem/1.0",
                        "name": "RecipientDomain",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by RecipientDomain\r\n| sort by Messages desc\r\n| project RecipientDomain, strcat(RecipientDomain, ' - ', Messages, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "4046b6e4-7487-48e2-a99f-b74975c738e5",
                        "version": "KqlParameterItem/1.0",
                        "name": "SenderDomain",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n//| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by SenderMailFromDomain\r\n| sort by Messages desc\r\n| project SenderMailFromDomain, strcat(SenderMailFromDomain, ' - ', Messages, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "86a41861-0346-4a1a-95f7-8e1b5db915c1",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subject",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                      },
                      {
                        "id": "ae9bd4c6-f68a-486b-ba8b-1b8abf27e67d",
                        "version": "KqlParameterItem/1.0",
                        "name": "MinimumAttachmentCount",
                        "type": 2,
                        "description": "Only include messages that have at least this many attachments",
                        "isRequired": true,
                        "query": "range x from 0 to 10 step 1",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": "0",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "a7bc4598-cf37-45b5-9049-ac62678f147b",
                        "version": "KqlParameterItem/1.0",
                        "name": "MinimumURLCount",
                        "type": 2,
                        "description": "Only include messages that have at least these many embedded URLs",
                        "isRequired": true,
                        "query": "range x from 0 to 20 step 1",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": "0",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize Count=count() by EmailDirection\r\n| sort by Count desc",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Email Direction",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "EmailDirection",
                    "exportParameterName": "Direction",
                    "exportDefaultValue": "All",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "EmailDirection",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "45",
                  "conditionalVisibility": {
                    "parameterName": "Nav",
                    "comparison": "isNotEqualTo",
                    "value": "Attachments"
                  },
                  "name": "query - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize Count=count() by DeliveryAction\r\n| sort by Count desc",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Delivery Action",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "DeliveryAction",
                    "exportParameterName": "DeliveryAction",
                    "exportDefaultValue": "All",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "DeliveryAction",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "Nav",
                    "comparison": "isNotEqualTo",
                    "value": "Attachments"
                  },
                  "name": "query - 5 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where \"{DeliveryAction}\" == \"All\" or DeliveryAction == \"{DeliveryAction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), EmailDirection",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Email Timeline",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "EmailAction",
                    "exportParameterName": "Action",
                    "exportDefaultValue": "All",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "timechart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "DeliveryAction",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "30",
                  "conditionalVisibility": {
                    "parameterName": "Nav",
                    "comparison": "isNotEqualTo",
                    "value": "Attachments"
                  },
                  "name": "query - 5 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where \"{DeliveryAction}\" == \"All\" or DeliveryAction == \"{DeliveryAction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\r\n| sort by DistinctMessages desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Senders",
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "SenderMailFromAddress",
                        "parameterName": "Sender2",
                        "defaultValue": "All"
                      },
                      {
                        "fieldName": "NetworkMessageIds",
                        "parameterName": "NetworkMessageIdsSender",
                        "parameterType": 1,
                        "defaultValue": "[]"
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "29ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctMessages",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipients",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "21ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipientDomains",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "40",
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where \"{DeliveryAction}\" == \"All\" or DeliveryAction == \"{DeliveryAction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\r\n| sort by DistinctMessages",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Recipients",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageIds",
                    "exportParameterName": "NetworkMessageIdsRecipient",
                    "exportDefaultValue": "[]",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "28ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctMessages",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "143px"
                          }
                        },
                        {
                          "columnMatch": "DistinctSenders",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "140px"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "30",
                  "name": "query - 0 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where \"{DeliveryAction}\" == \"All\" or DeliveryAction == \"{DeliveryAction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\r\n| sort by DistinctMessages desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Recipient Domains",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageIds",
                    "exportParameterName": "NetworkMessageIdsDomain",
                    "exportDefaultValue": "[]",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "RecipientDomain",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25.8571ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctMessages",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "143px"
                          }
                        },
                        {
                          "columnMatch": "DistinctSenders",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "140px"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "30",
                  "name": "query - 0 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ids = array_concat(dynamic({NetworkMessageIdsSender}),dynamic({NetworkMessageIdsRecipient}),dynamic({NetworkMessageIdsDomain}));\r\nEmailEvents\r\n| where NetworkMessageId in (ids) or array_length(ids) == 0\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| where \"{Direction}\" == \"All\" or EmailDirection == \"{Direction}\"\r\n| where \"{DeliveryAction}\" == \"All\" or DeliveryAction == \"{DeliveryAction}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Message Details",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageId",
                    "exportParameterName": "NetworkMessageId",
                    "exportDefaultValue": "None",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "Subject",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "35ch"
                          }
                        },
                        {
                          "columnMatch": "EmailDirection",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Outbound",
                                "representation": "right",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Inbound",
                                "representation": "left",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Intra-org",
                                "representation": "Pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "DeliveryAction",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Delivered",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Blocked",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Junked",
                                "representation": "Disable",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ConfidenceLevel",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "AttachmentCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UrlCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageId",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "name": "query - 6"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailAttachmentInfo\r\n| where NetworkMessageId == \"{NetworkMessageId}\"\r\n| project FileName, FileType, SHA256, ThreatTypes, ThreatNames, DetectionMethods",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Attached Files",
                    "noDataMessage": "Either no message was selected or no attachments were present",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 7"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailUrlInfo\r\n| where NetworkMessageId == \"{NetworkMessageId}\"\r\n| project Url, UrlDomain",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Embedded URLs",
                    "noDataMessage": "Either no message was selected or no URLs were present",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 7 - Copy"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Nav",
              "comparison": "isEqualTo",
              "value": "Email"
            },
            "name": "EmailGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "d6592a34-1ae6-4128-9a72-b9aa6295a0c7",
                        "version": "KqlParameterItem/1.0",
                        "name": "EmailDirection",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| summarize Count=count() by EmailDirection\r\n| sort by Count desc\r\n| project EmailDirection, Label=strcat(EmailDirection, ' - ', Count, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "e63f1a36-a44c-4936-8ad9-30bc7d8587d4",
                        "version": "KqlParameterItem/1.0",
                        "name": "Sender",
                        "label": "Sender Email",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      },
                      {
                        "id": "175b1a45-d1f0-4e23-b1dd-a19afab7ef7b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Recipient",
                        "label": "Recipient Email",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "08bf6816-f40b-46d3-b526-25c846728374",
                        "version": "KqlParameterItem/1.0",
                        "name": "RecipientDomain",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by RecipientDomain\r\n| sort by Messages desc\r\n| project RecipientDomain, strcat(RecipientDomain, ' - ', Messages, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "4046b6e4-7487-48e2-a99f-b74975c738e5",
                        "version": "KqlParameterItem/1.0",
                        "name": "SenderDomain",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n//| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by SenderMailFromDomain\r\n| sort by Messages desc\r\n| project SenderMailFromDomain, strcat(SenderMailFromDomain, ' - ', Messages, ' messages')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "86a41861-0346-4a1a-95f7-8e1b5db915c1",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subject",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                      },
                      {
                        "id": "ae9bd4c6-f68a-486b-ba8b-1b8abf27e67d",
                        "version": "KqlParameterItem/1.0",
                        "name": "MinimumAttachmentCount",
                        "type": 2,
                        "description": "Only include messages that have at least this many attachments",
                        "isRequired": true,
                        "query": "range x from 0 to 10 step 1",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": "0",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "a7bc4598-cf37-45b5-9049-ac62678f147b",
                        "version": "KqlParameterItem/1.0",
                        "name": "MinimumURLCount",
                        "type": 2,
                        "description": "Only include messages that have at least these many embedded URLs",
                        "isRequired": true,
                        "query": "range x from 0 to 20 step 1",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": "0",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalAttachments=sum(AttachmentCount), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\r\n| where TotalAttachments > 0\r\n| sort by TotalAttachments desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Attachment Senders",
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "SenderMailFromAddress",
                        "parameterName": "Sender2",
                        "defaultValue": "All"
                      },
                      {
                        "fieldName": "NetworkMessageIds",
                        "parameterName": "NetworkMessageIdsSender",
                        "parameterType": 1,
                        "defaultValue": "[]"
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "TotalAttachments",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "150px"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipients",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "21ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipientDomains",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "40",
                  "name": "query - 0 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalAttachments=sum(AttachmentCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\r\n| where TotalAttachments > 0\r\n| sort by TotalAttachments desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Attachment Recipients",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageIds",
                    "exportParameterName": "NetworkMessageIdsRecipient",
                    "exportDefaultValue": "[]",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "28ch"
                          }
                        },
                        {
                          "columnMatch": "TotalAttachments",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctSenders",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "140px"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "30",
                  "name": "query - 0 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalAttachments=sum(AttachmentCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\r\n| where TotalAttachments > 0\r\n| sort by TotalAttachments desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Attachment Recipient Domains",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageIds",
                    "exportParameterName": "NetworkMessageIdsDomain",
                    "exportDefaultValue": "[]",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "RecipientDomain",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25.8571ch"
                          }
                        },
                        {
                          "columnMatch": "TotalAttachments",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "22ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctSenders",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "140px"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "30",
                  "name": "query - 0 - Copy - Copy - Copy"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "16f2ef9f-f59b-4a34-87c7-561c4bbfa92e",
                        "version": "KqlParameterItem/1.0",
                        "name": "AttachmentName",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "value": ""
                      },
                      {
                        "id": "a64d4d00-7f7b-4fc0-991e-1b14e2f7ed1b",
                        "version": "KqlParameterItem/1.0",
                        "name": "AttachmentType",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "EmailAttachmentInfo\r\n| summarize AttachmentCount=count() by FileType\r\n| sort by AttachmentCount desc\r\n| project FileType, strcat(FileType, ' - ', AttachmentCount, ' attachments')",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ids = array_concat(dynamic({NetworkMessageIdsSender}),dynamic({NetworkMessageIdsRecipient}),dynamic({NetworkMessageIdsDomain}));\r\nEmailAttachmentInfo\r\n| where NetworkMessageId in (ids) or array_length(ids) == 0\r\n| where FileName contains \"{AttachmentName}\"\r\n| where \"*\" in ({AttachmentType}) or FileType in ({AttachmentType})\r\n| summarize UniqueEmailsWithThisAttachment=dcount(NetworkMessageId), NetworkMessageIdWithFile=make_set(NetworkMessageId) by FileName, FileType, SHA256",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageIdWithFile",
                    "exportParameterName": "NetworkMessageIdWithFile",
                    "exportDefaultValue": "[]",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "NetworkMessageIdWithFile",
                          "formatter": 5
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "FileName",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "FileName",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ids = dynamic({NetworkMessageIdWithFile});\r\nEmailAttachmentInfo\r\n| where NetworkMessageId in (ids)\r\n| distinct NetworkMessageId\r\n| join kind=leftouter (EmailEvents) on NetworkMessageId\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Message Details",
                    "noDataMessage": "No file attachments were selected",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageId",
                    "exportParameterName": "NetworkMessageId",
                    "exportDefaultValue": "None",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "Subject",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "35ch"
                          }
                        },
                        {
                          "columnMatch": "EmailDirection",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Outbound",
                                "representation": "right",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Inbound",
                                "representation": "left",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Intra-org",
                                "representation": "Pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "DeliveryAction",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Delivered",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Blocked",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Junked",
                                "representation": "Disable",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ConfidenceLevel",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "AttachmentCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UrlCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageId",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "name": "query - 6 - Copy"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Nav",
              "comparison": "isEqualTo",
              "value": "Attachments"
            },
            "name": "AttachmentGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d6592a34-1ae6-4128-9a72-b9aa6295a0c7",
                              "version": "KqlParameterItem/1.0",
                              "name": "EmailDirection",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "EmailEvents\r\n| summarize Count=count() by EmailDirection\r\n| sort by Count desc\r\n| project EmailDirection, Label=strcat(EmailDirection, ' - ', Count, ' messages')",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "e63f1a36-a44c-4936-8ad9-30bc7d8587d4",
                              "version": "KqlParameterItem/1.0",
                              "name": "Sender",
                              "label": "Sender Email",
                              "type": 1,
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": ""
                            },
                            {
                              "id": "175b1a45-d1f0-4e23-b1dd-a19afab7ef7b",
                              "version": "KqlParameterItem/1.0",
                              "name": "Recipient",
                              "label": "Recipient Email",
                              "type": 1,
                              "value": "",
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            },
                            {
                              "id": "08bf6816-f40b-46d3-b526-25c846728374",
                              "version": "KqlParameterItem/1.0",
                              "name": "RecipientDomain",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by RecipientDomain\r\n| sort by Messages desc\r\n| project RecipientDomain, strcat(RecipientDomain, ' - ', Messages, ' messages')",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "4046b6e4-7487-48e2-a99f-b74975c738e5",
                              "version": "KqlParameterItem/1.0",
                              "name": "SenderDomain",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "EmailEvents\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n//| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| summarize Messages=count() by SenderMailFromDomain\r\n| sort by Messages desc\r\n| project SenderMailFromDomain, strcat(SenderMailFromDomain, ' - ', Messages, ' messages')",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "86a41861-0346-4a1a-95f7-8e1b5db915c1",
                              "version": "KqlParameterItem/1.0",
                              "name": "Subject",
                              "type": 1,
                              "value": "",
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange"
                            },
                            {
                              "id": "ae9bd4c6-f68a-486b-ba8b-1b8abf27e67d",
                              "version": "KqlParameterItem/1.0",
                              "name": "MinimumAttachmentCount",
                              "type": 2,
                              "description": "Only include messages that have at least this many attachments",
                              "isRequired": true,
                              "query": "range x from 0 to 10 step 1",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": "0",
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "a7bc4598-cf37-45b5-9049-ac62678f147b",
                              "version": "KqlParameterItem/1.0",
                              "name": "MinimumURLCount",
                              "type": 2,
                              "description": "Only include messages that have at least these many embedded URLs",
                              "isRequired": true,
                              "query": "range x from 0 to 20 step 1",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": "0",
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalUrls=sum(UrlCount), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\r\n| where TotalUrls > 0\r\n| sort by TotalUrls desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Url Senders",
                          "timeContextFromParameter": "TimeRange",
                          "exportedParameters": [
                            {
                              "fieldName": "SenderMailFromAddress",
                              "parameterName": "Sender2",
                              "defaultValue": "All"
                            },
                            {
                              "fieldName": "NetworkMessageIds",
                              "parameterName": "NetworkMessageIdsSender",
                              "parameterType": 1,
                              "defaultValue": "[]"
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "SenderMailFromAddress",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "27ch"
                                }
                              },
                              {
                                "columnMatch": "TotalUrls",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "DistinctRecipients",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "21ch"
                                }
                              },
                              {
                                "columnMatch": "DistinctRecipientDomains",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "27ch"
                                }
                              },
                              {
                                "columnMatch": "NetworkMessageIds",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 0 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalUrls=sum(UrlCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\r\n| where TotalUrls > 0\r\n| sort by TotalUrls desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Url Recipients",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "NetworkMessageIds",
                          "exportParameterName": "NetworkMessageIdsRecipient",
                          "exportDefaultValue": "[]",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "RecipientEmailAddress",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "28ch"
                                }
                              },
                              {
                                "columnMatch": "TotalUrls",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "DistinctSenders",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "140px"
                                }
                              },
                              {
                                "columnMatch": "NetworkMessageIds",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 0 - Copy - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "EmailEvents\r\n| where \"*\" in ({EmailDirection}) or EmailDirection in ({EmailDirection})\r\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\r\n| where isempty(\"{Sender}\") or SenderMailFromAddress =~ \"{Sender}\"\r\n| where \"{Sender2}\" == \"All\" or SenderMailFromAddress =~ \"{Sender2}\"\r\n| where isempty(\"{Recipient}\") or RecipientEmailAddress =~ \"{Recipient}\"\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| where \"*\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\r\n| where \"*\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\r\n| where isempty(\"{Subject}\") or Subject contains \"{Subject}\"\r\n| summarize TotalUrls=sum(UrlCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\r\n| where TotalUrls > 0\r\n| sort by TotalUrls desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Url Recipient Domains",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "NetworkMessageIds",
                          "exportParameterName": "NetworkMessageIdsDomain",
                          "exportDefaultValue": "[]",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "RecipientDomain",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "25.8571ch"
                                }
                              },
                              {
                                "columnMatch": "TotalUrls",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "DistinctSenders",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "140px"
                                }
                              },
                              {
                                "columnMatch": "NetworkMessageIds",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 0 - Copy - Copy - Copy"
                      }
                    ]
                  },
                  "customWidth": "75",
                  "name": "EmailSearch",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "UrlClickEvents\r\n| where isnotempty(ThreatTypes)\r\n| project TimeGenerated, Url, AccountUpn, IPAddress, ActionType, ThreatTypes, DetectionMethods, UrlChain",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "All UrlClick Threats {TimeRange}",
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "SenderMailFromAddress",
                        "parameterName": "Sender2",
                        "defaultValue": "All"
                      },
                      {
                        "fieldName": "NetworkMessageIds",
                        "parameterName": "NetworkMessageIdsSender",
                        "parameterType": 1,
                        "defaultValue": "[]"
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "TotalUrls",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipients",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "21ch"
                          }
                        },
                        {
                          "columnMatch": "DistinctRecipientDomains",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageIds",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "25",
                  "name": "All UrlClick Threats in {TimeGenerated}"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "16f2ef9f-f59b-4a34-87c7-561c4bbfa92e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Url",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "value": "'*'"
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ids = array_concat(dynamic([]), dynamic([]), dynamic([]));\r\nEmailUrlInfo\r\n| where NetworkMessageId in (ids) or array_length(ids) == 0\r\n| where Url contains \"\"\r\n| where \"*\" in ('*') or UrlDomain in ('*')\r\n| summarize\r\n    UniqueMessagesWithUrl=dcount(NetworkMessageId),\r\n    NetworkMessageIdWithUrl=make_set(NetworkMessageId)\r\n    by Url, UrlDomain\r\n| join (UrlClickEvents\r\n| summarize Clicks = count() by Url, UrlChain) on Url\r\n| project Url, UrlDomain, UniqueMessagesWithUrl, Clicks, NetworkMessageIdWithUrl, UrlChain\r\n| search {Url}\r\n| project-away $table\r\n| sort by Clicks",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "exportedParameters": [
                      {
                        "fieldName": "NetworkMessageIdWithUrl",
                        "parameterName": "NetworkMessageIdWithUrl",
                        "defaultValue": "[]"
                      },
                      {
                        "fieldName": "Url",
                        "parameterName": "Url",
                        "parameterType": 1
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "NetworkMessageIdWithUrl",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ids = dynamic({NetworkMessageIdWithUrl});\r\nEmailUrlInfo\r\n| where NetworkMessageId in (ids)\r\n| distinct NetworkMessageId\r\n| join kind=leftouter (EmailEvents) on NetworkMessageId\r\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \"@\", 1)[0])\r\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId\r\n| sort by TimeGenerated desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Message Details",
                    "noDataMessage": "No URLs were selected",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "NetworkMessageId",
                    "exportParameterName": "NetworkMessageId",
                    "exportDefaultValue": "None",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "Subject",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "35ch"
                          }
                        },
                        {
                          "columnMatch": "EmailDirection",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Outbound",
                                "representation": "right",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Inbound",
                                "representation": "left",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Intra-org",
                                "representation": "Pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "DeliveryAction",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Delivered",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Blocked",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Junked",
                                "representation": "Disable",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ConfidenceLevel",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "AttachmentCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UrlCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageId",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 6 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "UrlClickEvents\r\n| search '{Url}'\r\n| project-reorder TimeGenerated, Url, ActionType, AccountUpn, IPAddress",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "URL Click Details",
                    "noDataMessage": "No URLs were selected",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SenderMailFromAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "RecipientEmailAddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "Subject",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "35ch"
                          }
                        },
                        {
                          "columnMatch": "EmailDirection",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Outbound",
                                "representation": "right",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Inbound",
                                "representation": "left",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Intra-org",
                                "representation": "Pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "DeliveryAction",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Delivered",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Blocked",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Junked",
                                "representation": "Disable",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ConfidenceLevel",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "AttachmentCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UrlCount",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "NetworkMessageId",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "URL Click Details"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Nav",
              "comparison": "isEqualTo",
              "value": "Url"
            },
            "name": "UrlGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InvestigationType",
        "comparison": "isEqualTo",
        "value": "Office"
      },
      "name": "Defender for Office"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Entity Insights",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "08f2ce7a-ef42-4f65-9d45-aa08cb636c25",
                  "cellValue": "EntityType",
                  "linkTarget": "parameter",
                  "linkLabel": "Investigate IP Address",
                  "subTarget": "IP",
                  "preText": "Investigate IP Address",
                  "style": "link"
                },
                {
                  "id": "8aefa16e-8c98-46f5-aad9-11cb153b05d7",
                  "cellValue": "EntityType",
                  "linkTarget": "parameter",
                  "linkLabel": "Investigate Account",
                  "subTarget": "Account",
                  "style": "link"
                },
                {
                  "id": "d111b800-491a-4e03-becb-f1c248747a37",
                  "cellValue": "EntityType",
                  "linkTarget": "parameter",
                  "linkLabel": "Investigate Host",
                  "subTarget": "Host",
                  "style": "link"
                },
                {
                  "id": "07c3b76b-fc48-47bd-84d6-55ebf239a417",
                  "cellValue": "EntityType",
                  "linkTarget": "parameter",
                  "linkLabel": "Investigate URL",
                  "subTarget": "URL",
                  "style": "link"
                },
                {
                  "id": "0ed37529-087d-4031-bdab-181f0d29b727",
                  "cellValue": "EntityType",
                  "linkTarget": "parameter",
                  "linkLabel": "Investigate File Hash",
                  "subTarget": "FileHash",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Entity"
            },
            "name": "Entity Investigation Links"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "IP Group",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "d492cada-966f-484b-b527-d41ba2ddd1a3",
                        "version": "KqlParameterItem/1.0",
                        "name": "IPAddress",
                        "type": 1,
                        "isRequired": true,
                        "query": "datatable(Entity:string, EntityType:string)\r\n\t[\"{EntityData}\",\"{EntityType}\"]\r\n| where EntityType =~ \"ip\"\r\n| project Entity",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "EntityType",
                    "comparison": "isEqualTo",
                    "value": "IP"
                  },
                  "name": "parameters - 8"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "d3818dec-355b-49b0-a2ba-e119da14844a",
                        "cellValue": "IPNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Active Accounts",
                        "subTarget": "Accounts",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "c4a505ba-ae31-4fa6-bbbc-659d0b27d036",
                        "cellValue": "IPNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Network",
                        "subTarget": "Network",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "ca04718e-3a80-42bd-b6c5-e5acadbc0a1d",
                        "cellValue": "IPNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Normalized Network (Preview)",
                        "subTarget": "NormalizedNetwork",
                        "style": "link"
                      },
                      {
                        "id": "08336f47-fe4b-4ba4-989c-d265aff3207d",
                        "cellValue": "IPNav",
                        "linkTarget": "parameter",
                        "linkLabel": "IOCs",
                        "subTarget": "IOC",
                        "style": "link"
                      },
                      {
                        "id": "c96ba98d-c211-419b-8abf-ea25772ab122",
                        "cellValue": "IPNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Related Alerts & Bookmarks",
                        "subTarget": "Related",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 4"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let Office = OfficeActivity\r\n| where TimeGenerated {TimeRange}\r\n| where ClientIP == \"{IPAddress}\"\r\n| extend UPN = tolower(UserId)\r\n| summarize Count=count() by UPN;\r\nlet AAD = SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where IPAddress == \"{IPAddress}\"\r\n| extend UPN = tolower(UserPrincipalName)\r\n| project UPN\r\n| summarize Count=count() by UPN;\r\nAzureActivity\r\n| where TimeGenerated {TimeRange}\r\n| where CallerIpAddress == \"{IPAddress}\"\r\n| extend UPN = tolower(Caller)\r\n| project UPN\r\n| summarize Count=count() by UPN\r\n| union AAD, Office\r\n| summarize Count=sum(Count) by UPN\r\n| sort by Count desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Accounts Active from IP",
                          "exportFieldName": "UPN",
                          "exportParameterName": "UPN",
                          "exportDefaultValue": "AllUPNs",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "UPN",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "query - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where IPAddress == \"{IPAddress}\"\r\n| where UserPrincipalName =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| summarize Count=count() by AppDisplayName",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "AAD Signin",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart"
                        },
                        "customWidth": "33",
                        "name": "query - 10"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where TimeGenerated {TimeRange}\r\n| where ClientIP == \"{IPAddress}\"\r\n| where UserId =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| summarize Count=count() by Operation",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Office Activity",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart"
                        },
                        "customWidth": "33",
                        "name": "query - 10 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where TimeGenerated {TimeRange}\r\n| where CallerIpAddress == \"{IPAddress}\"\r\n| where Caller =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| summarize Count=count() by OperationNameValue",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Azure Activity",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table"
                        },
                        "customWidth": "33",
                        "name": "query - 10 - Copy - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let Office = OfficeActivity\r\n| where UserId =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| where ClientIP == \"{IPAddress}\"\r\n| extend UPN = tolower(UserId)\r\n| project TimeGenerated, ResultType=ResultStatus, UPN, AppOrAction=Operation, Details=Parameters, Source=\"OfficeActivity\";\r\nlet AAD = SigninLogs\r\n| where UserPrincipalName =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| where IPAddress == \"{IPAddress}\"\r\n| extend UPN = tolower(UserPrincipalName)\r\n| project TimeGenerated, ResultType, UPN, AppOrAction=AppDisplayName, Details=ResultDescription, Source=\"SigninLogs\";\r\nAzureActivity\r\n| where Caller =~ \"{UPN}\" or \"AllUPNs\" == \"{UPN}\"\r\n| where CallerIpAddress == \"{IPAddress}\"\r\n| extend UPN = tolower(Caller)\r\n| project TimeGenerated, ResultType=ActivityStatus, UPN, AppOrAction=OperationNameValue, Details=ResourceId, Source=\"AzureActivity\"\r\n| union AAD, Office\r\n| sort by TimeGenerated desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Activity Detail",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - 4"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "IPNav",
                    "comparison": "isEqualTo",
                    "value": "Accounts"
                  },
                  "name": "IPAccounts"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let IPList = dynamic([\"{IPAddress}\"]);\r\n(union isfuzzy=true\r\n(CommonSecurityLog  //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP)\r\n| where SourceIP in (IPList) or DestinationIP in (IPList) or Message has_any (IPList)\r\n| extend IPMatch = case(SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"Message\") \r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection, FirewallAction=DeviceAction, Protocol, SourceIP, DestinationIP, tostring(DestinationPort), IPMatch, Type),\r\n(VMConnection //Final\r\n| where isnotempty(SourceIp) or isnotempty(DestinationIp) \r\n| where SourceIp in (IPList) or DestinationIp in (IPList) \r\n| extend IPMatch = case( SourceIp in (IPList), \"SourceIP\", DestinationIp in (IPList), \"DestinationIP\", \"None\") \r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection=Direction, Protocol, SourceIP=SourceIp, DestinationIP=DestinationIp, tostring(DestinationPort), IPMatch, Type\r\n),\r\n(WindowsFirewall //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP) \r\n| where SourceIP in (IPList) or DestinationIP in (IPList) \r\n| extend IPMatch = case( SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"None\") \r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection, FirewallAction, Protocol, SourceIP, DestinationIP, tostring(DestinationPort), IPMatch, Type\r\n),\r\n(W3CIISLog //Final\r\n| where isnotempty(cIP)\r\n| where cIP in (IPList) or sIP in (IPList)\r\n| extend IPMatch = case( cIP in (IPList), \"SourceIP\", sIP in (IPList), \"DestinationIP\", \"None\") \r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection=\"Inbound\", SourceIP=cIP, DestinationIP=sIP, DestinationPort=tostring(sPort), IPMatch, Type\r\n)\r\n)\r\n| summarize Count=sum(Count) by Type\r\n| sort by Count desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Network Activity",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "Type",
                          "exportParameterName": "LogType",
                          "exportDefaultValue": "None",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "Network Overview"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let IPList = dynamic([\"{IPAddress}\"]);\r\n(union isfuzzy=true\r\n(CommonSecurityLog  //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP)\r\n| where SourceIP in (IPList) or DestinationIP in (IPList) or Message has_any (IPList)\r\n| extend IPMatch = case(SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"Message\") \r\n| summarize Count=count() by IPMatch),\r\n(VMConnection //Final\r\n| where isnotempty(SourceIp) or isnotempty(DestinationIp) \r\n| where SourceIp in (IPList) or DestinationIp in (IPList) \r\n| extend IPMatch = case( SourceIp in (IPList), \"SourceIP\", DestinationIp in (IPList), \"DestinationIP\", \"None\") \r\n| summarize Count=count() by IPMatch\r\n),\r\n(WindowsFirewall //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP) \r\n| where SourceIP in (IPList) or DestinationIP in (IPList) \r\n| extend IPMatch = case( SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"None\") \r\n| summarize Count=count() by IPMatch\r\n),\r\n(W3CIISLog //Final\r\n| where isnotempty(cIP)\r\n| where cIP in (IPList) or sIP in (IPList)\r\n| extend IPMatch = case( cIP in (IPList), \"SourceIP\", sIP in (IPList), \"DestinationIP\", \"None\") \r\n| summarize Count=count() by IPMatch\r\n)\r\n)\r\n| summarize Count=sum(Count) by IPMatch\r\n| sort by Count desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "IPMatch",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "IPMatch",
                          "exportParameterName": "IPMatch",
                          "exportDefaultValue": "None",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "IPMatch",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "50",
                        "name": "IP Match"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let IPList = dynamic([\"{IPAddress}\"]);\r\n(union isfuzzy=true\r\n(CommonSecurityLog  //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP)\r\n| where SourceIP in (IPList) or DestinationIP in (IPList) or Message has_any (IPList)\r\n| extend IPMatch = case(SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"Message\") \r\n| where IPMatch =~ \"{IPMatch}\" or \"{IPMatch}\" =~ \"None\"\r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection, FirewallAction=DeviceAction, Protocol, SourceIP, DestinationIP, tostring(DestinationPort), IPMatch, Type),\r\n(VMConnection //Final\r\n| where isnotempty(SourceIp) or isnotempty(DestinationIp) \r\n| where SourceIp in (IPList) or DestinationIp in (IPList) \r\n| extend IPMatch = case( SourceIp in (IPList), \"SourceIP\", DestinationIp in (IPList), \"DestinationIP\", \"None\") \r\n| where IPMatch =~ \"{IPMatch}\" or \"{IPMatch}\" =~ \"None\"\r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection=Direction, Protocol, SourceIP=SourceIp, DestinationIP=DestinationIp, tostring(DestinationPort), IPMatch, Type\r\n),\r\n(WindowsFirewall //Final\r\n| where isnotempty(SourceIP) or isnotempty(DestinationIP) \r\n| where SourceIP in (IPList) or DestinationIP in (IPList) \r\n| extend IPMatch = case( SourceIP in (IPList), \"SourceIP\", DestinationIP in (IPList), \"DestinationIP\", \"None\") \r\n| where IPMatch =~ \"{IPMatch}\" or \"{IPMatch}\" =~ \"None\"\r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection, FirewallAction, Protocol, SourceIP, DestinationIP, tostring(DestinationPort), IPMatch, Type\r\n),\r\n(W3CIISLog //Final\r\n| where isnotempty(cIP)\r\n| where cIP in (IPList) or sIP in (IPList)\r\n| extend IPMatch = case( cIP in (IPList), \"SourceIP\", sIP in (IPList), \"DestinationIP\", \"None\") \r\n| where IPMatch =~ \"{IPMatch}\" or \"{IPMatch}\" =~ \"None\"\r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by Computer, CommunicationDirection=\"Inbound\", SourceIP=cIP, DestinationIP=sIP, DestinationPort=tostring(sPort), IPMatch, Type\r\n)\r\n)\r\n| where Type =~ \"{LogType}\" or \"{LogType}\" =~ \"None\"\r\n| sort by LastOccurance desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Network Activity Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "Network"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "DnsEvents\r\n| where ResultCode == 0\r\n| where IPAddresses contains \"{IPAddress}\" or ClientIP =~ \"{IPAddress}\"\r\n| extend IPMatch = iff(ClientIP =~ \"{IPAddress}\", \"DNSClientIP\", \"IPAddressAnswer\")\r\n| summarize Count=count() by IPMatch\r\n| sort by Count desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "DNS Query Details",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "IPMatch",
                          "exportParameterName": "DNSIPMatch",
                          "exportDefaultValue": "None",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "IPMatch",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "query - 8"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let data = DnsEvents\r\n| where ResultCode == 0\r\n| where IPAddresses contains \"{IPAddress}\" or ClientIP =~ \"{IPAddress}\"\r\n| extend IPMatch = iff(ClientIP =~ \"{IPAddress}\", \"DNSClientIP\", \"IPAddressAnswer\")\r\n| where IPMatch =~ \"{DNSIPMatch}\" or \"{DNSIPMatch}\" =~ \"None\"\r\n| extend queryID = strcat(Computer, ClientIP, IPAddresses, Name, QueryType);\r\ndata\r\n| summarize FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated), Count=count() by DNSServer=Computer, DNSClientIP=ClientIP, IPAddressAnswer=IPAddresses, Name, QueryType, IPMatch, queryID\r\n| join kind = inner (data\r\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by queryID) on queryID \r\n| project-away TimeGenerated, queryID, queryID1\r\n| project DNSServer, DNSClientIP, IPAddressAnswer, Name, QueryType, IPMatch, Trend, FirstOccurance, LastOccurance, Count\r\n| sort by LastOccurance desc",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "DNS Query Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Trend",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "name": "DNSQueryDetails"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "IPNav",
                    "comparison": "isEqualTo",
                    "value": "Network"
                  },
                  "name": "IPNetwork"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Network normalization\r\n\r\nThis section of the workbook uses a normalized schema for network and requires the installation of parsers in your workspace to function.  Please use the references below to setup the Network Normalization parsers.\r\n\r\n- [Normalization in Azure Sentinel](https://docs.microsoft.com/azure/sentinel/normalization)\r\n- [GitHub - Normalized Schema - Networking](https://github.com/Azure/Azure-Sentinel/tree/master/Parsers/Normalized%20Schema%20-%20Networking%20&#40;v1.0.0&#41;)",
                          "style": "info"
                        },
                        "name": "text - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| summarize Count = count() by IPMatch\r\n| order by Count",
                          "size": 4,
                          "showAnalytics": true,
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "IPMatch",
                          "exportParameterName": "IPMatch",
                          "exportDefaultValue": "All",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "IPMatch",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "query - 6"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| where IPMatch == \"{IPMatch}\" or \"{IPMatch}\" == \"All\"\r\n| summarize Count = count() by FirewallAction=DvcAction\r\n| order by Count",
                          "size": 0,
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "FirewallAction",
                          "exportParameterName": "FirewallAction",
                          "exportDefaultValue": "All",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "compositeBarSettings": {
                                    "labelText": "",
                                    "columnSettings": []
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "FirewallActionQuery"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| where DvcAction == \"{FirewallAction}\" or \"{FirewallAction}\" == \"All\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| where IPMatch == \"{IPMatch}\" or \"{IPMatch}\" == \"All\"\r\n| summarize Count = count() by SourceIP = SrcIpAddr\r\n| order by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "SourceIP",
                          "exportParameterName": "SourceIP",
                          "exportDefaultValue": "All",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "query - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| where DvcAction == \"{FirewallAction}\" or \"{FirewallAction}\" == \"All\"\r\n| where SrcIpAddr == \"{SourceIP}\" or \"{SourceIP}\" == \"All\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| where IPMatch == \"{IPMatch}\" or \"{IPMatch}\" == \"All\"\r\n| summarize Count = count() by DestinationIP = DstIpAddr\r\n| order by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "DestinationIP",
                          "exportParameterName": "DestinationIP",
                          "exportDefaultValue": "All",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "query - 0 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| where DvcAction == \"{FirewallAction}\" or \"{FirewallAction}\" == \"All\"\r\n| where SrcIpAddr == \"{SourceIP}\" or \"{SourceIP}\" == \"All\"\r\n| where DstIpAddr == \"{DestinationIP}\" or \"{DestinationIP}\" == \"All\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| where IPMatch == \"{IPMatch}\" or \"{IPMatch}\" == \"All\"\r\n| summarize Count = count() by DestinationPort = DstPortNumber\r\n| order by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "DestinationPort",
                          "exportParameterName": "DestinationPort",
                          "exportDefaultValue": "All",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "query - 0 - Copy - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Network_MetaParser\r\n| where SrcIpAddr == \"{IPAddress}\" or DstIpAddr == \"{IPAddress}\"\r\n| where DvcAction == \"{FirewallAction}\" or \"{FirewallAction}\" == \"All\"\r\n| where SrcIpAddr == \"{SourceIP}\" or \"{SourceIP}\" == \"All\"\r\n| where DstIpAddr == \"{DestinationIP}\" or \"{DestinationIP}\" == \"All\"\r\n| where DstPortNumber == \"{DestinationPort}\" or \"{DestinationPort}\" == \"All\"\r\n| extend IPMatch = iff(SrcIpAddr == \"{IPAddress}\", \"Source IP Match\", \"Destination IP Match\")\r\n| where IPMatch == \"{IPMatch}\" or \"{IPMatch}\" == \"All\"\r\n| summarize Count = count() by ReportingProdcut = EventProduct, SourceIP = SrcIpAddr, DestinationIP = DstIpAddr, DestinationPort = DstPortNumber, ApplicationLayerProtocol = NetworkApplicationProtocol, NetworkProtocol = NetworkProtocol, DeviceAction = DvcAction\r\n| order by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 4"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "IPNav",
                    "comparison": "isEqualTo",
                    "value": "NormalizedNetwork"
                  },
                  "name": "NormalizedNetworkGroup"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ThreatIntelligenceIndicator\r\n| where TimeGenerated > ago(180d)\r\n| where NetworkIP == \"{IPAddress}\"\r\n| summarize arg_max(TimeGenerated, Active) by IndicatorId, SourceSystem, Description, ThreatType\r\n| project SourceSystem, Description, ThreatType, Active",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "IP Threat Intelligence",
                          "noDataMessage": "No Threat Intelligence was found for the selected IP.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "customWidth": "50",
                        "name": "query - 13"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "IPNav",
                    "comparison": "isEqualTo",
                    "value": "IOC"
                  },
                  "name": "IPIOC"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where TimeGenerated {TimeRange}\r\n| where Entities contains \"\"\"IP\"\"\"\r\n| extend AllEntities = parse_json(Entities)\r\n| mv-expand AllEntities\r\n| where AllEntities.Type == \"ip\" and AllEntities.Address == \"{IPAddress}\"\r\n| project AlertSeverity, AlertName=DisplayName, ProviderName, AlertDetails=Entities, SystemAlertId",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Related Security Alerts",
                          "noDataMessage": "No Security Alerts were found for the selected IP.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 13 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "HuntingBookmark\r\n| where TimeGenerated {TimeRange}\r\n| extend Entities = parse_json(QueryResultRow).__entityMapping\r\n| where Entities contains \"\"\"ip\"\"\" //Entity Type to match\r\n| summarize arg_max(TimeGenerated, BookmarkName, Notes, Tags, Entities) by BookmarkId\r\n| extend splitEntities = split(replace(@'[\"{}]', '', tostring(Entities)),',')\r\n| mv-expand splitEntities\r\n| extend splitEntity = split(splitEntities, ':')\r\n| where splitEntity[1] =~ \"ip\"\r\n| where splitEntity[0] =~ \"{IPAddress}\"\r\n| project BookmarkName, Notes, Tags",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Related Bookmarks",
                          "noDataMessage": "No Bookmarks were found for the selected IP.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 13 - Copy - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "IPNav",
                    "comparison": "isEqualTo",
                    "value": "Related"
                  },
                  "name": "IPRelated"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EntityType",
              "comparison": "isEqualTo",
              "value": "IP"
            },
            "name": "IPGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Account Group",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "7d4ef622-5d81-47ef-b07a-13624db7dda2",
                        "version": "KqlParameterItem/1.0",
                        "name": "UPN",
                        "type": 1,
                        "isRequired": true,
                        "query": "datatable(Entity:string, EntityType:string)\r\n\t[\"{EntityData}\",\"{EntityType}\"]\r\n| where EntityType =~ \"account\"\r\n| extend Entity = iff(Entity contains \"@\", Entity, strcat(Entity, \"@\", \"{DefaultUPNSuffix}\"))\r\n| project Entity",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "d6455f34-39bd-479a-937e-96f69e6c85b1",
                        "version": "KqlParameterItem/1.0",
                        "name": "samAccountName",
                        "type": 1,
                        "query": "(union isfuzzy=true\r\n(datatable(UPN:string, Priority:int)\r\n\t[\"{UPN}\", 1]\r\n| extend samAccountName = split(UPN, \"@\", 0)\r\n| project samAccountName=tostring(samAccountName[0]), Priority),\r\n(IdentityInfo\r\n| where TimeGenerated > ago(180d)\r\n| where AccountUPN =~ \"{UPN}\"\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| project samAccountName=AccountName, Priority=toint(2)))\r\n| top 1 by Priority desc\r\n| project-away Priority",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "f83bc6df-ec7a-4a5d-911a-fa102a27e770",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Hunting",
                        "subTarget": "Hunting",
                        "style": "link"
                      },
                      {
                        "id": "a3c1474c-0fe4-4105-8928-38dc9ceffb34",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Location Anomalies",
                        "subTarget": "Location",
                        "style": "link"
                      },
                      {
                        "id": "997a8794-1da5-4bf0-94cc-952977f1e2ef",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Computer Logons",
                        "subTarget": "Logons",
                        "style": "link"
                      },
                      {
                        "id": "65ef8c1a-12a1-475d-8c80-ae1950d2b82c",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Conditional Access Analysis",
                        "subTarget": "CAP",
                        "style": "link"
                      },
                      {
                        "id": "b3237117-0e48-46c0-827e-dfbeb8cb6b1c",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "IOCs",
                        "subTarget": "IOC",
                        "style": "link"
                      },
                      {
                        "id": "54e10cc1-6fa7-4458-bcdf-4d42196298a1",
                        "cellValue": "UserNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Related Alerts & Bookmarks",
                        "subTarget": "Alerts",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 5"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Hunting/Analytic Rules",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRange",
                              "type": 4,
                              "isRequired": true,
                              "value": {
                                "durationMs": 604800000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000,
                                    "createdTime": "2018-11-13T19:33:10.162Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 900000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 1800000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 3600000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 14400000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 43200000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 86400000,
                                    "createdTime": "2018-11-13T19:33:10.165Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 172800000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 259200000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 604800000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 1209600000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 2592000000,
                                    "createdTime": "2018-11-13T19:33:10.167Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "f7f7970b-58c1-474f-9043-62243d2d4edd",
                              "version": "KqlParameterItem/1.0",
                              "name": "Users",
                              "label": "UserName",
                              "type": 1,
                              "description": "Search for a User",
                              "isRequired": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "value": ""
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let threshold=2;\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n//Include only authentications that require MFA\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n//Extend authentication result description\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n//Find results that include both denined and completed MFA\r\n| where AuthResult in (\"MFA completed in Azure AD\", \"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| where UserPrincipalName in ({Users})\r\n//Create a list of completed and denied MFA challenges per user principal name over 10 minute periods\r\n| summarize ['Result Types']=make_list(AuthResult) by UserPrincipalName, bin(TimeGenerated, 10m)\r\n//Ensure the list includes both completed and denied MFA challenges\r\n| where ['Result Types'] has (\"MFA completed in Azure AD\") and ['Result Types'] has_any (\"MFA denied; user declined the authentication\", \"MFA denied; user did not respond to mobile app notification\")\r\n| mv-expand ['Result Types'] to typeof(string)\r\n//Expand and count all the denied challenges and then return UserPrincipalNames where the MFA denied count is greater or equal to your threshold\r\n| where ['Result Types'] has_any (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Denied MFA Count']=count()by ['Result Types'], UserPrincipalName\r\n| where ['Denied MFA Count'] >= threshold",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Possible Successful MFA Spam",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Possible Successful MFA Spam"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n| where AuthResult in (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Result Types']=make_list(AuthResult), ['Result Count']=count() by UserPrincipalName, bin(TimeGenerated, 60m)\r\n//Find hits with greater than 3 failures in an hour\r\n| where ['Result Count'] > 3\r\n| where UserPrincipalName in ({Users})",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Possible MFA Spam Attempts",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Possible MFA Spam Attacks"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "(union isfuzzy=true\r\n(AuditLogs \r\n| where OperationName =~ \"Disable Strong Authentication\"\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n| extend InitiatedByUser = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n| extend Targetprop = todynamic(TargetResources)\r\n| extend TargetUser = tostring(Targetprop[0].userPrincipalName) \r\n| where InitiatedByUser in ({Users}) or TargetUser in ({Users})\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by User = TargetUser, InitiatedByUser , Operation = OperationName , CorrelationId, IPAddress, Category, Source = SourceSystem , AADTenantId, Type\r\n),\r\n(AWSCloudTrail\r\n| where EventName in~ (\"DeactivateMFADevice\", \"DeleteVirtualMFADevice\") \r\n| extend InstanceProfileName = tostring(parse_json(RequestParameters).InstanceProfileName)\r\n| extend TargetUser = tostring(parse_json(RequestParameters).userName)\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by User = TargetUser, Source = EventSource , Operation = EventName , TenantorInstance_Detail = InstanceProfileName, IPAddress = SourceIpAddress\r\n)\r\n)\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = User, IPCustomEntity = IPAddress",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "MFA Disabled for a User",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "MFA Disabled for a User"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let aadFunc = (tableName:string){\r\ntable(tableName)\r\n| where ResultType == 500121\r\n| where Status has \"MFA Denied; user declined the authentication\" or Status has \"MFA denied; Phone App Reported Fraud\"\r\n| extend Type = Type\r\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress, URLCustomEntity = ClientAppUsed\r\n};\r\nlet aadSignin = aadFunc(\"SigninLogs\");\r\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\r\nunion isfuzzy=true aadSignin, aadNonInt\r\n| where AccountCustomEntity in ({Users})",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Explicit MFA Deny",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Explicit MFA Deny"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| where Category =~ \"RoleManagement\"\r\n| where AADOperationType in (\"Assign\", \"AssignEligibleRole\")\r\n| where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\")\r\n| mv-expand TargetResources\r\n| mv-expand TargetResources.modifiedProperties\r\n| extend displayName_ = tostring(TargetResources_modifiedProperties.displayName)\r\n| where displayName_ =~ \"Role.DisplayName\"\r\n| extend RoleName = tostring(parse_json(tostring(TargetResources_modifiedProperties.newValue)))\r\n| where RoleName contains \"Global administrator\" or RoleName contains \"Security administrator\"\r\n| extend InitiatingApp = tostring(parse_json(tostring(InitiatedBy.app)).displayName)\r\n| extend Initiator = iif(isnotempty(InitiatingApp), InitiatingApp, tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\r\n// Uncomment below to not alert for PIM activations\r\n//| where Initiator != \"MS-PIM\"\r\n| extend Target = tostring(TargetResources.userPrincipalName)\r\n| summarize by bin(TimeGenerated, 1h), OperationName,  RoleName, Target, Initiator, Result\r\n| extend AccountCustomEntity = Target",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Assigned Admin Role",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "User Assigned Admin Role"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n// Isolate run command actions\r\n| where OperationNameValue == \"MICROSOFT.COMPUTE/VIRTUALMACHINES/RUNCOMMAND/ACTION\"\r\n| where Caller in ({Users})\r\n| summarize StartTime=min(TimeGenerated), EndTime=max(TimeGenerated), max(CallerIpAddress), make_list(ActivityStatusValue) by CorrelationId, Authorization, Caller\r\n// Limit to Run Command executions that Succeeded\r\n| where list_ActivityStatusValue has \"Success\"\r\n// Extract data from the Authorization field\r\n| extend Authorization_d = parse_json(Authorization)\r\n| extend Scope = Authorization_d.scope\r\n| extend Scope_s = split(Scope, \"/\")\r\n| extend Subscription = tostring(Scope_s[2])\r\n| extend VirtualMachineName = tostring(Scope_s[-1])\r\n| project StartTime, EndTime, Subscription, VirtualMachineName, CorrelationId, Caller, CallerIpAddress=max_CallerIpAddress\r\n// Create a join key using  the Caller (UPN)\r\n| extend joinkey = tolower(Caller)",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Azure VM Run Command",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Azure VM Run Command"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| where OperationName in ('Change user password', 'Reset password (self-service)', 'Change password (self-service)')\r\n| extend \r\n    InitiatingIdentity = tostring(parse_json(tostring(InitiatedBy.user)).displayName),\r\n    InitiatingUPN = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\r\n    TargetUPN = tostring(TargetResources[0].userPrincipalName), \r\n    InitiatingIP = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| where InitiatingUPN in ({Users}) or TargetUPN in ({Users})\r\n| project-reorder TimeGenerated, InitiatingUPN, TargetUPN, ActivityDisplayName",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Password Changes",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Password Changes"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AADUserRiskEvents\r\n| where RiskState contains \"atRisk\"\r\n| where UserPrincipalName in ({Users})",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Risky User Alert",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Risky Admin"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let locationLookback = (SigninLogs\r\n    | where TimeGenerated between(ago(45d) .. ago(7d))\r\n    | where UserPrincipalName in ({Users})\r\n    | extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n    | project-reorder\r\n        TimeGenerated,\r\n        UserDisplayName,\r\n        UserPrincipalName,\r\n        ResultType,\r\n        ResultDescription,\r\n        locationString\r\n    | where ResultType == 0\r\n    | project TimeGenerated, UserDisplayName, UserPrincipalName, locationString);\r\nlet RecentSignins = (SigninLogs\r\n    | where TimeGenerated >= ago(7d)\r\n    | where UserPrincipalName in ({Users})\r\n    | extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n    | project-reorder\r\n        TimeGenerated,\r\n        UserDisplayName,\r\n        UserPrincipalName,\r\n        ResultType,\r\n        ResultDescription,\r\n        locationString\r\n    | where ResultType == 0\r\n    | project TimeGenerated, UserDisplayName, UserPrincipalName, IPAddress, locationString);\r\nlocationLookback\r\n| join kind=rightanti (RecentSignins) on locationString\r\n| summarize count() by  UserDisplayName, UserPrincipalName, IPAddress, locationString",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Unusual Successful Signin Location",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Unusual Successful Signin Location Observed in Last 7 days"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let LocationLookback =\r\nSigninLogs\r\n| where TimeGenerated between(ago(45d)..ago(7d))\r\n| where UserPrincipalName in ({Users})\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| project-reorder TimeGenerated, UserDisplayName, UserPrincipalName, ResultType, ResultDescription, locationString\r\n| project TimeGenerated, UserDisplayName, UserPrincipalName, locationString;\r\nlet OneWeekSignins =\r\nSigninLogs\r\n| where TimeGenerated >= ago(7d)\r\n| where UserPrincipalName in ({Users})\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| where ResultType != 0\r\n| project TimeGenerated, UserDisplayName, UserPrincipalName, IPAddress, locationString;\r\nLocationLookback\r\n| join kind=rightanti (OneWeekSignins) on locationString\r\n| summarize count() by UserDisplayName, UserPrincipalName, IPAddress, locationString",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Unusual Signin Failure Location",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "count_",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "count_",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "customWidth": "25",
                        "name": "Unusual Signin Failure Location Observed in Last 7 days - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let locationLookback = (SigninLogs\r\n    | where TimeGenerated between(ago(45d) .. ago(7d))\r\n    | where UserPrincipalName in ({Users})\r\n    | extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n    | where ResultType == 0\r\n    | project TimeGenerated, UserDisplayName, IPAddress, UserPrincipalName, locationString);\r\nlet RecentSignins = (SigninLogs\r\n    | where TimeGenerated >= ago(7d)\r\n    | where UserPrincipalName in ({Users})\r\n    | extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n    | where ResultType == 0\r\n    | project TimeGenerated, UserDisplayName, IPAddress, UserPrincipalName, locationString);\r\nlocationLookback\r\n| join kind=rightanti (RecentSignins) on IPAddress\r\n| where IPAddress !has '170.99' \r\n| summarize count() by  UserDisplayName, IPAddress, UserPrincipalName, locationString",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Unusual Successful Signin IPAddress",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Unusual Successful Signin IPAddress Observed in Last 7 days - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let LocationLookback =\r\nSigninLogs\r\n| where TimeGenerated between(ago(45d)..ago(7d))\r\n| where UserPrincipalName in ({Users})\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| project-reorder TimeGenerated, UserDisplayName, UserPrincipalName, ResultType, ResultDescription, locationString\r\n| project TimeGenerated, IPAddress, UserDisplayName, UserPrincipalName, locationString;\r\nlet OneWeekSignins =\r\nSigninLogs\r\n| where TimeGenerated >= ago(7d)\r\n| where UserPrincipalName in ({Users})\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| where ResultType != 0\r\n| project TimeGenerated, IPAddress, UserDisplayName, UserPrincipalName, locationString;\r\nLocationLookback\r\n| join kind=rightanti (OneWeekSignins) on IPAddress\r\n| where IPAddress !has '170.99' \r\n| summarize count() by UserDisplayName, IPAddress, UserPrincipalName, locationString",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Unusual Signin Failure IPAddress",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "count_",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "count_",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "customWidth": "25",
                        "name": "Unusual Signin Failure IPAddress Observed in Last 7 days - Copy - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let CommonLocation = SigninLogs\r\n    | where UserPrincipalName in ('dirsync@mdcourts.onmicrosoft.com', 'stephen.mui@courts.state.md.us', 'dan.admin365@mdcourts.onmicrosoft.com', 'admin@mdcourts.onmicrosoft.com', 'jason.admin365@mdcourts.onmicrosoft.com', 'pierre.volcy@courts.state.md.us', 'salih.abdul.mateen@courts.state.md.us', 'renee.abbott@courts.state.md.us', 'jeff.admin365@mdcourts.onmicrosoft.com')\r\n    | extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n    | extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n    | summarize Count=count() by LAT, LONG\r\n    | top 1 by Count;\r\nlet CommonLAT = toscalar(CommonLocation\r\n    | project LAT);\r\nlet CommonLONG = toscalar(CommonLocation\r\n    | project LONG);\r\nSigninLogs\r\n| where UserPrincipalName in ('dirsync@mdcourts.onmicrosoft.com', 'stephen.mui@courts.state.md.us', 'dan.admin365@mdcourts.onmicrosoft.com', 'admin@mdcourts.onmicrosoft.com', 'jason.admin365@mdcourts.onmicrosoft.com', 'pierre.volcy@courts.state.md.us', 'salih.abdul.mateen@courts.state.md.us', 'renee.abbott@courts.state.md.us', 'jeff.admin365@mdcourts.onmicrosoft.com')\r\n| extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n| extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n| extend KmFromTypicalLocation = geo_distance_2points(CommonLONG, CommonLAT, LONG, LAT) / 1000\r\n| extend LocationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n| summarize Count=count() by UserPrincipalName, IPAddress, KmFromTypicalLocation, LAT, LONG, LocationString\r\n\r\n",
                          "size": 2,
                          "showAnalytics": true,
                          "title": "Azure Admin Signin Map",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "map",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "count_",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "count_",
                              "sortOrder": 2
                            }
                          ],
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "latitude": "LAT",
                            "longitude": "LONG",
                            "sizeSettings": "Count",
                            "sizeAggregation": "Sum",
                            "labelSettings": "LocationString",
                            "legendMetric": "Count",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "KmFromTypicalLocation",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed",
                              "heatmapMin": 100,
                              "heatmapMax": 1000
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "Azure Admin Signin Map"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "Hunting"
                  },
                  "name": "Hunting Rules"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let UPN = \"{UPN}\";\r\nlet CommonLocation = SigninLogs\r\n| where UserPrincipalName =~ UPN\r\n| extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n| extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n| summarize Count=count() by LAT, LONG\r\n| top 1 by Count;\r\nlet CommonLAT = toscalar(CommonLocation\r\n| project LAT);\r\nlet CommonLONG = toscalar(CommonLocation\r\n| project LONG);\r\nSigninLogs\r\n| where UserPrincipalName =~ UPN\r\n| extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n| extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n| extend KmFromTypicalLocation = geo_distance_2points(CommonLONG, CommonLAT, LONG, LAT) / 1000\r\n| summarize Count=count() by IPAddress, KmFromTypicalLocation, AppDisplayName, ResultDescription\r\n| sort by KmFromTypicalLocation desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Distance from Typical Signin Location",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "IPAddress",
                          "exportParameterName": "IP",
                          "exportDefaultValue": "None",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "KmFromTypicalLocation",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 100,
                                  "max": 1000,
                                  "palette": "greenRed",
                                  "aggregation": "Average"
                                }
                              },
                              {
                                "columnMatch": "Count",
                                "formatter": 0,
                                "formatOptions": {
                                  "aggregation": "Sum"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let UPN = \"{UPN}\";\r\nlet CommonLocation = SigninLogs\r\n| where UserPrincipalName =~ UPN\r\n| extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n| extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n| summarize Count=count() by LAT, LONG\r\n| top 1 by Count;\r\nlet CommonLAT = toscalar(CommonLocation\r\n| project LAT);\r\nlet CommonLONG = toscalar(CommonLocation\r\n| project LONG);\r\nSigninLogs\r\n| where UserPrincipalName =~ UPN\r\n| extend LAT = round(todouble(LocationDetails.geoCoordinates.latitude), 1)\r\n| extend LONG = round(todouble(LocationDetails.geoCoordinates.longitude), 1)\r\n| extend KmFromTypicalLocation = geo_distance_2points(CommonLONG, CommonLAT, LONG, LAT) / 1000\r\n| extend LocationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n| summarize Count=count() by IPAddress, KmFromTypicalLocation, LAT, LONG, LocationString\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Signin Map",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "map",
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "latitude": "LAT",
                            "longitude": "LONG",
                            "sizeSettings": "Count",
                            "sizeAggregation": "Sum",
                            "labelSettings": "LocationString",
                            "legendMetric": "Count",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "KmFromTypicalLocation",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed",
                              "heatmapMin": 100,
                              "heatmapMax": 1000
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where IPAddress == \"{IP}\"\r\n| extend ResultDetail = iff(ResultType == 0, \"Success\", ResultDescription)\r\n| parse AuthenticationDetails with * '[' AuthDetails ']' *\r\n| project TimeGenerated, AppDisplayName, ResourceDisplayName, ResultDetail, ClientAppUsed, ConditionalAccessStatus, AuthDetails, DeviceDetail, LocationDetails, IPAddress, RiskDetail, RiskState\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Signin Details",
                          "noDataMessage": "Select a Signin from the grid to see additional details",
                          "noDataMessageStyle": 2,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AuthDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "LocationDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 6"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "Location"
                  },
                  "name": "LocationAnomalies"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "bdcb9616-6e17-4694-a76a-49fb9de8ae2a",
                              "version": "KqlParameterItem/1.0",
                              "name": "SigninStatus",
                              "type": 2,
                              "isRequired": true,
                              "value": ">= 0",
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    {\r\n        \"label\": \"Successful Logons\",\r\n        \"value\": \"== 0\"\r\n    },\r\n    {\r\n        \"label\": \"Failed Logons\",\r\n        \"value\": \"<> 0\"\r\n    },\r\n    {\r\n        \"label\": \"All Logons\",\r\n        \"value\": \">= 0\"\r\n    }\r\n]",
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange"
                            },
                            {
                              "id": "17a6b0e5-3d86-4ba2-94ac-795bdd692378",
                              "version": "KqlParameterItem/1.0",
                              "name": "PolicyName",
                              "type": 2,
                              "isRequired": true,
                              "query": "SigninLogs\r\n| mv-expand ConditionalAccessPolicies\r\n| distinct tostring(ConditionalAccessPolicies.displayName)",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": "value::1",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "d880b501-931f-4659-a360-94d5c519ddc4",
                              "version": "KqlParameterItem/1.0",
                              "name": "PolicyResult",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SigninLogs\r\n| mv-expand ConditionalAccessPolicies\r\n| distinct tostring(ConditionalAccessPolicies.result)",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 6"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let FilteredSignin = SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where Status.errorCode {SigninStatus}\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| mv-expand ConditionalAccessPolicies\r\n| where ConditionalAccessPolicies.displayName =~ \"{PolicyName}\" or \"{PolicyName:label}\" =~ \"Any one\"\r\n| where ConditionalAccessPolicies.result in ({PolicyResult})\r\n| distinct Id;\r\nSigninLogs\r\n| where Id in (FilteredSignin)\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| extend LocationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n| project TimeGenerated, Location=LocationString, IPAddress, AppDisplayName, ResourceDisplayName, ResultDescription, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), Id\r\n| sort by TimeGenerated desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "AAD Signins",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "Id",
                          "exportParameterName": "SigninId",
                          "exportDefaultValue": "None",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 1
                              }
                            ]
                          }
                        },
                        "name": "query - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where Status.errorCode {SigninStatus}\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where Id == \"{SigninId}\"\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| extend LocationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n| project TimeGenerated, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ResultDescription, Id\r\n| sort by TimeGenerated asc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "AAD Signin Sequence",
                          "noDataMessage": "Select a Signin to see the Logon Sequence",
                          "noDataMessageStyle": 2,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 1
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 5 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where Status.errorCode {SigninStatus}\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where Id == \"{SigninId}\"\r\n| distinct tostring(DeviceDetail), UserAgent",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Device and UserAgent Detail",
                          "noDataMessage": "Select a Signin to see Device and UserAgent Details",
                          "noDataMessageStyle": 2,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 1
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 5 - Copy - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where TimeGenerated {TimeRange}\r\n| where Status.errorCode {SigninStatus}\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where Id =~ \"{SigninId}\"\r\n| mv-expand ConditionalAccessPolicies\r\n| where ConditionalAccessPolicies.displayName =~ \"{PolicyName}\" or \"{PolicyName:label}\" =~ \"Any one\"\r\n| where ConditionalAccessPolicies.result in ({PolicyResult})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| project TimeGenerated, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), GrantControl=ConditionalAccessPolicies.enforcedGrantControls, ConditionalAccessPolicyName=ConditionalAccessPolicies.displayName, ConditionalAccessResult=ConditionalAccessPolicies.result, MfaDetail\r\n| sort by TimeGenerated asc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Conditional Access Policy Details",
                          "noDataMessage": "Select a Login to see Conditional Access Details",
                          "noDataMessageStyle": 2,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 1
                              }
                            ]
                          }
                        },
                        "name": "query - 5 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "CAP"
                  },
                  "name": "ConditionalAccess"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let eStatus = dynamic([\"0xC000006A\", \"0xC0000234\", \"0x18\"]);\r\nlet secEventID = dynamic([4771, 4625, 4776]);\r\nlet secEvents = SecurityEvent\r\n| where TargetUserName =~ \"{samAccountName}\"\r\n| where EventID in (secEventID)\r\n| where Level == 16\r\n| where (EventID == 4625 and SubStatus in~ (eStatus)) or (EventID == 4771 and Status in~ (eStatus)) or (EventID == 4776 and Status in~ (eStatus))\r\n| extend ResultStatus = case(EventID == 4625, SubStatus, Status)\r\n| extend SourceNameorIP = case(EventID == 4776, Workstation, (EventID == 4625 and isnotempty(WorkstationName)), WorkstationName, IpAddress)\r\n| extend ResultDescription = case(EventID == 4625, strcat(Activity, '  Logon type: ', LogonTypeName), Activity)\r\n| summarize FirstOccurance = min(TimeGenerated), LastOccurance = max(TimeGenerated), FailedSigninCount=count(), LocationCount=dcount(SourceNameorIP) by TargetUserName, SourceNameorIP, ResultDescription, StatusCode=ResultStatus\r\n| extend LogSource = \"SecurityEvent\";\r\nSigninLogs\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n// Error codes that we want to look at as they are related to the use of incorrect password.\r\n| where ResultType in (\"50126\", \"50053\" , \"50055\", \"50056\")\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser \r\n| extend LocationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n| summarize FirstOccurance = min(TimeGenerated), LastOccurance = max(TimeGenerated), FailedSigninCount=count(), LocationCount=dcount(LocationString) by TargetUserName=UserPrincipalName, SourceNameorIP=IPAddress, LocationString, AppDisplayName, ResultDescription, tostring(Browser), tostring(OS), StatusCode=ResultType\r\n| extend LogSource = \"SigninLogs\"\r\n| union secEvents\r\n| project TargetUserName, SourceNameorIP, ResultDescription, StatusCode, LocationString, AppDisplayName, Browser, OS, FirstOccurance, LastOccurance, FailedSigninCount, LocationCount, LogSource",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Failed Signin - Bad Password",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "(union isfuzzy=true\r\n(SecurityEvent\r\n| where EventID in (\"4723\",\"4724\")\r\n| where TargetUserName =~ \"{samAccountName}\" or SubjectUserName =~ \"{samAccountName}\"\r\n| extend Result = case(Level==8, \"success\", Level==16, \"failure\", \"unknown\")\r\n| project TimeGenerated, InitiatedBy=SubjectUserName, Username=TargetUserName, OperationName=Activity, Result\r\n),\r\n(AuditLogs\r\n| where OperationName contains \"password\"\r\n| sort by TimeGenerated desc\r\n| extend InitiatedBy = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend Username = tostring(TargetResources[0].userPrincipalName)\r\n| where Username =~ \"{UPN}\" or InitiatedBy =~ \"{UPN}\"\r\n| project TimeGenerated, InitiatedBy, Username, OperationName, Result\r\n))\r\n| sort by TimeGenerated desc",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Password Change and Resets",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "Passwords"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "(union isfuzzy=true\r\n(AuditLogs \r\n| where OperationName =~ \"Disable Strong Authentication\"\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n| extend InitiatedByUser = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n| extend Targetprop = todynamic(TargetResources)\r\n| extend TargetUser = tostring(Targetprop[0].userPrincipalName) \r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by User = TargetUser, InitiatedByUser , Operation = OperationName , CorrelationId, IPAddress, Category, Source = SourceSystem , AADTenantId, Type\r\n),\r\n(AWSCloudTrail\r\n| where EventName in~ (\"DeactivateMFADevice\", \"DeleteVirtualMFADevice\") \r\n| extend InstanceProfileName = tostring(parse_json(RequestParameters).InstanceProfileName)\r\n| extend TargetUser = tostring(parse_json(RequestParameters).userName)\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by User = TargetUser, Source = EventSource , Operation = EventName , TenantorInstance_Detail = InstanceProfileName, IPAddress = SourceIpAddress\r\n)\r\n)\r\n| where User =~ \"{UPN}\" or InitiatedByUser =~ \"{UPN}\"",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Disabled MFA",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "customWidth": "50",
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where Status.errorCode == 500121\r\n| where Status.additionalDetails contains \"fraud\"\r\n| project TimeGenerated, AppDisplayName, IPAddress, Status=Status.additionalDetails, AuthenticationDetails, DeviceDetail, LocationDetails",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "MFA Fraud Reports",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AuthenticationDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "DeviceDetail",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "LocationDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| where TimeGenerated > ago(90d)\r\n| where OperationName == \"Consent to application\"\r\n| where Category == \"ApplicationManagement\"\r\n| extend UserPrincipalName = InitiatedBy.user.userPrincipalName\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| mv-expand TargetResources\r\n| extend ModifiedProperties = TargetResources.modifiedProperties\r\n| mv-apply ModifiedProperties on (\r\n    summarize Consent = make_bag(pack(tostring(ModifiedProperties.displayName), ModifiedProperties.newValue)))\r\n| project TimeGenerated, ActivityDisplayName, UserPrincipalName, isAdminConsent=Consent.['ConsentContext.IsAdminConsent'], isAppOnly=Consent.['ConsentContext.IsAppOnly'], OnBehalfOfAll=Consent.['ConsentContext.OnBehalfOfAll'], ResourceServicePrincipalName=Consent.['TargetId.ServicePrincipalNames'], ResourceDisplayName=TargetResources.displayName, Permissions=Consent.['ConsentAction.Permissions']",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Application Consent",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - Consent"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "(union isfuzzy=true\r\n(OfficeActivity \r\n| where UserId =~ \"{UPN}\"\r\n| where Operation =~ \"Set-Mailbox\" \r\n| extend parsed = parse_json(Parameters) \r\n| extend FieldType = tostring(parsed[1].Name)\r\n| where FieldType =~ \"ForwardTo\" or FieldType =~ \"ForwardingSmtpAddress\" \r\n| extend ForwardTo = tostring(parsed[1].Value)\r\n| extend ForwardType = tostring(parsed[2].Name)\r\n| project TimeGenerated, UserId, ClientIP=split(ClientIP, \":\", 0)[0], ForwardTo, ForwardType\r\n),\r\n(OfficeActivity \r\n| where UserId =~ \"{UPN}\"\r\n| where Operation =~ \"New-InboxRule\"\r\n| mv-expand parse_json(Parameters)\r\n| extend ParamType = tostring(Parameters.Name)\r\n| where ParamType =~ \"ForwardTo\"\r\n| extend ForwardTo = tostring(Parameters.Value)\r\n| project TimeGenerated, UserId, ClientIP=split(ClientIP, \":\", 0)[0], ForwardTo, ForwardType=\"InboxRule\"\r\n))\r\n| sort by TimeGenerated desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "Mailbox Forwarding Rules",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where InvestigationPriority > 0\r\n| project TimeGenerated, InvestigationPriority, ActivityType, ActionType, SourceIPLocation, UsersInsights, DevicesInsights, ActivityInsights\r\n| sort by InvestigationPriority desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "UEBA Investigation Priorities",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UsersInsights",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "DevicesInsights",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "ActivityInsights",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 4"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "IOC"
                  },
                  "name": "UserIOCs"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where TimeGenerated {TimeRange}\r\n| where Entities contains \"\"\"account\"\"\"\r\n| extend AllEntities = parse_json(Entities)\r\n| mv-expand AllEntities\r\n| where AllEntities.Type == \"account\"\r\n| extend AccountEntity = iff(isnotempty(AllEntities.UPNSuffix), strcat(AllEntities.Name, '@', AllEntities.UPNSuffix), AllEntities.Name)\r\n| where AccountEntity =~ \"{UPN}\" or AccountEntity =~ \"{samAccountName}\"\r\n| project AlertSeverity, AlertName=DisplayName, ProviderName, AlertDetails=Entities, SystemAlertId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Security Alerts",
                          "noDataMessage": "No Security Alerts were found for the selected Account.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "HuntingBookmark\r\n| where TimeGenerated {TimeRange}\r\n| extend Entities = parse_json(QueryResultRow).__entityMapping\r\n| where Entities contains \"\"\"account\"\"\" //Entity Type to match\r\n| summarize arg_max(TimeGenerated, BookmarkName, Notes, Tags, Entities) by BookmarkId\r\n| extend splitEntities = split(replace(@'[\"{}]', '', tostring(Entities)),',')\r\n| mv-expand splitEntities\r\n| extend splitEntity = split(splitEntities, ':')\r\n| where splitEntity[1] =~ \"account\"\r\n| where splitEntity[0] =~ \"{UPN}\" or splitEntity[0] =~ \"{samAccountName}\"\r\n| project BookmarkName, Notes, Tags",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Bookmarks",
                          "noDataMessage": "No Bookmarks were found for the selected Account.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "Alerts"
                  },
                  "name": "RelatedAlerts"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "805e76ac-979e-4247-a304-f3897fa71be6",
                              "version": "KqlParameterItem/1.0",
                              "name": "LogonType",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let events = dynamic([4624, 4625, 4768, 4771]);\r\nlet kerbevents = dynamic([4768, 4771]);\r\n(union isfuzzy=true\r\n(SigninLogs\r\n| take 1\r\n| project LogonType=\"AAD/HDJ\"),\r\n(SecurityEvent\r\n| where EventID in (events)\r\n| where TargetUserName =~ \"{samAccountName}\"\r\n| extend LogonType = iff(EventID in (kerbevents), \"Kerberos TGT\", LogonTypeName)\r\n| distinct LogonType),\r\n(DeviceLogonEvents\r\n| where AccountName =~ \"{samAccountName}\"\r\n| distinct LogonType))\r\n| sort by LogonType asc",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": [
                                "3 - Network"
                              ]
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let events = dynamic([4624, 4625, 4768, 4771]);\r\nlet kerbevents = dynamic([4768, 4771]);\r\n(union isfuzzy=true \r\n(SigninLogs\r\n| where UserPrincipalName =~ \"{UPN}\"\r\n| where AppDisplayName == \"Windows Sign In\"\r\n| extend LogonResult = iff(ResultType == 0, \"Success\", \"Failure\")\r\n| summarize Count=count(), FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated) by LogonComputerOrIP=tostring(DeviceDetail.displayName), LogonResult, LogonType=\"AAD/HDJ\", ErrorCode=ResultType, DataSource=Type),\r\n(SecurityEvent\r\n| where EventID in (events)\r\n| where TargetUserName =~ \"{samAccountName}\"\r\n| extend LogonResult = iff(Level == 8, \"Success\", \"Failure\")\r\n| extend LogonType = iff(EventID in (kerbevents), \"Kerberos TGT\", LogonTypeName)\r\n| extend LogonComputerOrIP = iff(EventID == 4768, IpAddress, Computer)\r\n| extend ErrorCode = iff(EventID in (kerbevents), Status, SubStatus)\r\n| summarize Count=count(), FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated) by LogonComputerOrIP, LogonResult, LogonType, ErrorCode, DataSource=Type),\r\n(DeviceLogonEvents\r\n| where AccountName =~ \"{samAccountName}\"\r\n| summarize Count=count(), FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated) by LogonComputerOrIP=DeviceName, LogonResult=ActionType, LogonType, DataSource=Type))\r\n| where LogonType in ({LogonType})\r\n| sort by Count desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Computer Logons",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "Computer Logons"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserNav",
                    "comparison": "isEqualTo",
                    "value": "Logons"
                  },
                  "name": "UserLogons"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EntityType",
              "comparison": "isEqualTo",
              "value": "Account"
            },
            "name": "AccountGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Host Group",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "8ae96068-86fb-4713-9497-6424e724251f",
                        "version": "KqlParameterItem/1.0",
                        "name": "Host",
                        "label": "Host FQDN",
                        "type": 1,
                        "isRequired": true,
                        "query": "datatable(Entity:string, EntityType:string)\r\n\t[\"{EntityData}\",\"{EntityType}\"]\r\n| where EntityType =~ \"Host\"\r\n| project Entity",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 17"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "5a523135-ffeb-4217-9a78-5db3af6e0292",
                        "cellValue": "HostNav",
                        "linkTarget": "parameter",
                        "linkLabel": "New Processes",
                        "subTarget": "hostAnomaly",
                        "style": "link"
                      },
                      {
                        "id": "c0a3eb1f-186c-4e14-8559-aa17385eba12",
                        "cellValue": "HostNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Account Logons",
                        "subTarget": "accountLogons",
                        "style": "link"
                      },
                      {
                        "id": "622de805-7326-42e5-9b9a-f26f9ce7bbce",
                        "cellValue": "HostNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Security Baseline",
                        "subTarget": "securityBaseline",
                        "style": "link"
                      },
                      {
                        "id": "3435d945-dd0b-4b7f-9a38-4a915eecebbf",
                        "cellValue": "HostNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Suspicious Changes",
                        "subTarget": "suspiciousChanges",
                        "style": "link"
                      },
                      {
                        "id": "d914883d-4e94-4b23-ae39-0b9516d7248b",
                        "cellValue": "HostNav",
                        "linkTarget": "parameter",
                        "linkLabel": "Related Alerts & Bookmarks",
                        "subTarget": "relatedAlerts",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 2"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Account Logons",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "7506e1db-61f7-43d4-827b-b0a7e4d96ccb",
                              "version": "KqlParameterItem/1.0",
                              "name": "HostAnomalies",
                              "label": "Choose Host Anomaly",
                              "type": 10,
                              "description": "Toggle New Logons and Rare Processes",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n { \"value\": \"Rare Procs\", \"label\": \"Rare Procs\"},\r\n {\"value\": \"New Logons\", \"label\": \"New Logons\", \"selected\":true }\r\n]",
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": "Rare Procs"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 10"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = ({TimeRange:seconds}s + 90d);\r\nlet endtime = {TimeRange:seconds}s;\r\nlet ProcessCreationEvents=() {\r\nlet processEvents=SecurityEvent\r\n| where EventID==4688\r\n| where Computer =~ \"{Host}\"\r\n| where TimeGenerated >= ago(starttime) \r\n| project TimeGenerated, ComputerName=Computer,AccountName=SubjectUserName, AccountDomain=SubjectDomainName, ProcessPath=NewProcessName, FileName=tostring(split(NewProcessName, '\\\\')[(-1)]), ProcessCommandLine = CommandLine, InitiatingProcessFileName=ParentProcessName,InitiatingProcessCommandLine='',InitiatingProcessParentFileName='';\r\nprocessEvents};\r\nlet allHostsProcessEvents = SecurityEvent\r\n| where EventID==4688\r\n| where TimeGenerated >= ago(starttime) \r\n| summarize AllHostsWhereProcessObserved=make_set(Computer), UniqueHosts=dcount(Computer) by FileName=tostring(split(NewProcessName, '\\\\')[(-1)]);\r\nProcessCreationEvents\r\n| where TimeGenerated >= ago(starttime) and TimeGenerated < ago(endtime)\r\n| summarize count(), arg_max(TimeGenerated, ProcessPath) by FileName\r\n| join kind=rightanti (\r\n    ProcessCreationEvents\r\n    | where TimeGenerated >= ago(endtime)\r\n    | summarize FirstOccurance = min(TimeGenerated), LastOccurance = arg_max(TimeGenerated, ProcessPath) by FileName\r\n) on FileName\r\n| project FileName, ProcessPath, FirstOccurance, LastOccurance\r\n| join kind=leftouter allHostsProcessEvents on FileName\r\n| project FileName, ProcessPath, FirstOccurance, LastOccurance, AllHostsWhereProcessObserved, UniqueHosts\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "New Processes on Host {Host} observed during {TimeRange:label}",
                          "exportFieldName": "FileName",
                          "exportParameterName": "process",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "FileName",
                                "sortOrder": 2
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "FileName",
                                "label": "File Name"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "FileName",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "hostAnomaly"
                          },
                          {
                            "parameterName": "HostAnomalies",
                            "comparison": "isEqualTo",
                            "value": "Rare Procs"
                          }
                        ],
                        "name": "query - 12"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "*A New Logon is defined as a Logon to the Host from an Account for the first time in seven days.*"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "hostAnomaly"
                          },
                          {
                            "parameterName": "HostAnomalies",
                            "comparison": "isEqualTo",
                            "value": "New Logons"
                          }
                        ],
                        "name": "text - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//Replace this with Brian's query and description\r\nlet starttime = 7d;\r\nlet endtime = 1d;\r\nlet LogonEvents=() { \r\nlet logonSuccess=SecurityEvent \r\n| where EventID==4624\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='Logon';\r\nlet logonFail=SecurityEvent \r\n| where EventID==4625\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='LogonFailure';\r\nlogonFail \r\n| union logonSuccess\r\n};\r\nLogonEvents \r\n| where TimeGenerated > ago(endtime) \r\n| where ActionType == 'Logon' \r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), count() by ComputerName, AccountName \r\n| join kind=leftanti ( \r\nLogonEvents \r\n| where TimeGenerated between(ago(starttime)..ago(endtime)) \r\n| where ActionType == 'Logon' \r\n| summarize count() by ComputerName, AccountName \r\n) on ComputerName, AccountName \r\n//| summarize StartTimeUtc = min(StartTimeUtc), EndTimeUtc = max(EndTimeUtc), HostCount=dcount(ComputerName), HostSet=makeset(ComputerName, 10)  by AccountName, ComputerName\r\n| summarize count() by AccountName\r\n//| extend timestamp = StartTimeUtc, AccountCustomEntity = AccountName\r\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Click to filter by Account",
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "exportFieldName": "AccountName",
                          "exportParameterName": "Account",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "AccountName",
                              "formatter": 1
                            },
                            "showBorder": false
                          },
                          "chartSettings": {
                            "group": "AccountName",
                            "createOtherGroup": 10
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "hostAnomaly"
                          },
                          {
                            "parameterName": "HostAnomalies",
                            "comparison": "isEqualTo",
                            "value": "New Logons"
                          }
                        ],
                        "name": "query - 16 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = 7d;\r\nlet endtime = 1d;\r\nlet LogonEvents=() { \r\nlet logonSuccess=SecurityEvent\r\n| where EventID==4624\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where tolower(Account) endswith tolower(\"{Account}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, Activity, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='Logon';\r\nlet logonFail=SecurityEvent \r\n| where EventID==4625\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where tolower(Account) endswith tolower(\"{Account}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, Activity, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='LogonFailure';\r\nlogonFail \r\n| union logonSuccess\r\n};\r\nLogonEvents \r\n| where TimeGenerated > ago(endtime) \r\n| where ActionType == 'Logon' \r\n| summarize FirsttOccurance = min(TimeGenerated), LastOccurance = max(TimeGenerated), count() by ComputerName, AccountName, Activity \r\n| join kind=leftanti ( \r\nLogonEvents \r\n| where TimeGenerated between(ago(starttime)..ago(endtime)) \r\n| where ActionType == 'Logon' \r\n| summarize count() by ComputerName, AccountName \r\n) on ComputerName, AccountName\r\n| summarize FirsttOccurance = min(FirsttOccurance), LastOccurance = max(LastOccurance), Count=dcount(AccountName) by AccountName, Activity",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "New logons to Host Filtered by Account",
                          "noDataMessage": "Click on an Account above to perform the query.",
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "sortBy": [],
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "AccountName",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "HostCount",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "AccountName",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "HostCount",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "sizeSettings": "HostCount",
                            "sizeAggregation": "Sum",
                            "legendMetric": "HostCount",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "type": "heatmap",
                              "colorAggregation": "Sum",
                              "nodeColorField": "HostCount",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "name": "query - 16 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "HostNav",
                    "comparison": "isEqualTo",
                    "value": "hostAnomaly"
                  },
                  "name": "HostAnomaly"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = 7d;\r\nlet endtime = 1d;\r\nlet LogonEvents=() { \r\nlet logonSuccess=SecurityEvent\r\n| where EventID==4624\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, Activity, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='Logon';\r\nlet logonFail=SecurityEvent \r\n| where EventID==4625\r\n| where tolower(Computer) contains tolower(\"{Host}\")\r\n| where TargetUserName !endswith \"$\"\r\n| where TargetUserName !contains \"NETWORK SERVICE\"\r\n| where TargetUserName !contains \"LOCAL SERVICE\"\r\n| where TargetUserName != \"SYSTEM\"\r\n| project TimeGenerated, Activity, ComputerName=Computer, AccountName=TargetUserName, AccountDomain=TargetDomainName, IpAddress, ActionType='LogonFailure';\r\nlogonFail \r\n| union logonSuccess\r\n};\r\nLogonEvents \r\n| where TimeGenerated > ago(endtime) \r\n| where ActionType == 'Logon' \r\n| summarize FirstOccurance = min(TimeGenerated), LastOccurance = max(TimeGenerated), count() by ComputerName, AccountName, Activity \r\n| join kind=leftanti ( \r\nLogonEvents \r\n| where TimeGenerated between(ago(starttime)..ago(endtime)) \r\n| where ActionType == 'Logon' \r\n| summarize count() by ComputerName, AccountName \r\n) on ComputerName, AccountName\r\n| summarize FirstOccurance = min(FirstOccurance), LastOccurance = max(LastOccurance), Count=dcount(AccountName) by AccountName, Activity",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of New Logons to Host",
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "exportFieldName": "AccountName",
                          "exportParameterName": "Account",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "showExpandCollapseGrid": true,
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "AccountName",
                                "label": "Account Name"
                              },
                              {
                                "columnId": "FirstOccurance",
                                "label": "First Occurance"
                              },
                              {
                                "columnId": "LastOccurance",
                                "label": "Last Occurance"
                              }
                            ]
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "AccountName",
                              "formatter": 1
                            },
                            "showBorder": false
                          },
                          "chartSettings": {
                            "group": "AccountName",
                            "createOtherGroup": 10
                          }
                        },
                        "name": "query - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let events = dynamic([4624, 4625, 4768, 4771]);\r\nlet kerbevents = dynamic([4768, 4771]);\r\nlet aadSignIns = SigninLogs\r\n| where TimeGenerated > ago(7d)\r\n| where AppDisplayName == \"Windows Sign In\"\r\n| extend HostShort = split(\"{Host}\", \".\", 0)[0]\r\n| where DeviceDetail.displayName contains HostShort\r\n| extend LogonResult = iff(ResultType == 0, \"Success\", \"Failure\")\r\n| summarize Count=count(), FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated) by Account=Identity, LogonResult, LogonType=\"AAD/HDJ\", ErrorCode=ResultType;\r\nSecurityEvent\r\n| where EventID in (events)\r\n| extend LogonResult = iff(Level == 8, \"Success\", \"Failure\")\r\n| extend LogonType = iff(EventID in (kerbevents), \"Kerberos TGT\", LogonTypeName)\r\n| extend LogonComputerOrIP = iff(EventID == 4768, IpAddress, Computer)\r\n| where Account !contains @\"Window Manager\\DWM\"\r\n| extend ErrorCode = iff(EventID in (kerbevents), Status, SubStatus)\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"NT AUTHORITY\"\r\n| where Computer contains \"{Host}\"\r\n| summarize Count=count(), FirstOccurance=min(TimeGenerated), LastOccurance=max(TimeGenerated) by Account, LogonResult, LogonType, ErrorCode\r\n| union aadSignIns\r\n| sort by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Account Logons",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "LogonResult",
                                "label": "Logon Result"
                              },
                              {
                                "columnId": "LogonType",
                                "label": "Logon Type"
                              },
                              {
                                "columnId": "ErrorCode",
                                "label": "Error Code"
                              },
                              {
                                "columnId": "FirstOccurance",
                                "label": "First Occurance"
                              },
                              {
                                "columnId": "LastOccurance",
                                "label": "Last Occurance"
                              }
                            ]
                          }
                        },
                        "name": "query - 13"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "HostNav",
                    "comparison": "isEqualTo",
                    "value": "accountLogons"
                  },
                  "name": "AccountLogon"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "7491e67e-bdbd-4f0a-8819-45b65104137d",
                              "version": "KqlParameterItem/1.0",
                              "name": "securityBaselineOptions",
                              "label": "Choose Security Check",
                              "type": 10,
                              "description": "Choose which security check to perform",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n { \"value\": \"Updates\", \"label\": \"Updates\", \"selected\":true },\r\n { \"value\": \"Security Baseline\", \"label\": \"Security Baseline\" },\r\n { \"value\": \"Protection Status\", \"label\": \"Protection Status\" }\r\n]",
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "HostNav",
                          "comparison": "isEqualTo",
                          "value": "securityBaseline"
                        },
                        "name": "parameters - 15"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let lastRun = toscalar(UpdateSummary\r\n| where Computer =~ \"{Host}\"\r\n| summarize max(TimeGenerated));\r\nUpdateSummary\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where TimeGenerated between((lastRun-5m)..lastRun)\r\n//| project CriticalUpdatesMissing, SecurityUpdatesMissing, OtherUpdatesMissing\r\n| project TimeGenerated, Computer, CriticalUpdatesMissing, SecurityUpdatesMissing, OtherUpdatesMissing, TotalUpdatesMissing, RestartPending, ComputerEnvironment",
                                "size": 4,
                                "showAnalytics": true,
                                "title": "Update Summary filtered by Update Check",
                                "timeContextFromParameter": "TimeRange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "CriticalUpdatesMissing",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": "0",
                                            "representation": "red",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "SecurityUpdatesMissing",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "thresholdValue": "0",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "OtherUpdatesMissing",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "thresholdValue": "0",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "TotalUpdatesMissing",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": "0",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "green",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "RestartPending",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "true",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "CriticalUpdatesMissing",
                                      "label": "Critical Updates Missing"
                                    },
                                    {
                                      "columnId": "SecurityUpdatesMissing",
                                      "label": "Security Updates Missing"
                                    },
                                    {
                                      "columnId": "OtherUpdatesMissing",
                                      "label": "Other Updates Missing"
                                    },
                                    {
                                      "columnId": "TotalUpdatesMissing",
                                      "label": "Total Updates Missing"
                                    },
                                    {
                                      "columnId": "RestartPending",
                                      "label": "Restart Pending"
                                    },
                                    {
                                      "columnId": "ComputerEnvironment",
                                      "label": "Computer Environment"
                                    }
                                  ]
                                },
                                "tileSettings": {
                                  "titleContent": {
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "CriticalUpdatesMissing",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "min": 1,
                                      "palette": "redBright"
                                    }
                                  },
                                  "rightContent": {
                                    "columnMatch": "SecurityUpdatesMissing",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "min": 1,
                                      "palette": "purpleRed"
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "OtherUpdatesMissing",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "yellow"
                                    }
                                  },
                                  "showBorder": false,
                                  "size": "auto"
                                }
                              },
                              "name": "query - 0"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let lastRun = toscalar(Update\r\n| where Computer =~ \"{Host}\"\r\n| summarize max(TimeGenerated));\r\nUpdate\r\n| where Computer =~ \"{Host}\"\r\n| where TimeGenerated between((lastRun-5m)..lastRun)\r\n| where UpdateState != \"Installed\"\r\n| where Classification != \"Feature Packs\"\r\n| project TimeGenerated, Computer, SourceSystem, Title, Classification, PublishedDate, UpdateState, Product, ResourceId, ResourceGroup, RebootBehavior",
                                "size": 1,
                                "showAnalytics": true,
                                "title": "Required Updates Missing in the Latest Check",
                                "noDataMessage": "No missing updates.",
                                "noDataMessageStyle": 3,
                                "timeContextFromParameter": "TimeRange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "rowLimit": 500,
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "SourceSystem",
                                      "label": "Source System"
                                    },
                                    {
                                      "columnId": "PublishedDate",
                                      "label": "Published Date"
                                    },
                                    {
                                      "columnId": "UpdateState",
                                      "label": "Update State"
                                    },
                                    {
                                      "columnId": "ResourceId",
                                      "label": "Resource ID"
                                    },
                                    {
                                      "columnId": "ResourceGroup",
                                      "label": "Resource Group"
                                    },
                                    {
                                      "columnId": "RebootBehavior",
                                      "label": "Reboot Behavior"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 2"
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "securityBaseline"
                          },
                          {
                            "parameterName": "securityBaselineOptions",
                            "comparison": "isEqualTo",
                            "value": "Updates"
                          }
                        ],
                        "name": "updateSummary"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let lastRun = toscalar(SecurityBaselineSummary\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| summarize max(TimeGenerated));\r\nSecurityBaselineSummary\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where TimeGenerated == lastRun\r\n| project TimeGenerated, Computer, TotalAssessedRules, Type, PercentageOfPassedRules, CriticalFailedRules, WarningFailedRules, InformationalFailedRules",
                                "size": 4,
                                "title": "Security Baseline Summary",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "Computer"
                                    },
                                    {
                                      "columnId": "TotalAssessedRules",
                                      "label": "Total Assessed Rules"
                                    },
                                    {
                                      "columnId": "Type"
                                    },
                                    {
                                      "columnId": "PercentageOfPassedRules",
                                      "label": "Percentage of Passed Rules"
                                    },
                                    {
                                      "columnId": "CriticalFailedRules",
                                      "label": "Critical Failed Rules"
                                    },
                                    {
                                      "columnId": "WarningFailedRules",
                                      "label": "Warning Failed Rules"
                                    },
                                    {
                                      "columnId": "InformationalFailedRules",
                                      "label": "Informational Failed Rules"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 0"
                            },
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "91e6ebb4-6719-47ac-a49b-9f71cf52b5c3",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "ruleSeverity",
                                    "label": "Failed Rule Severity Level",
                                    "type": 2,
                                    "description": "Choose severity level of failed rules to display",
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "SecurityBaseline\r\n| where Computer =~ \"{Host}\"\r\n| where AnalyzeResult == \"Failed\"\r\n| where TimeGenerated > ago(24h)\r\n| summarize by RuleSeverity",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "value": [
                                      "value::all"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 86400000
                                    },
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "parameters - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let currentAssessmentId = toscalar(SecurityBaseline\r\n| where Computer =~ \"{Host}\"\r\n| summarize arg_max(TimeGenerated, AssessmentId)\r\n| project AssessmentId);\r\nSecurityBaseline\r\n| where AssessmentId == currentAssessmentId\r\n| where AnalyzeResult == \"Failed\"\r\n| where Computer =~ \"{Host}\"\r\n| where RuleSeverity in ({ruleSeverity})\r\n| project TimeGenerated, Computer, BaselineType, RuleSeverity, Description, ActualResult, ExpectedResult, AnalyzeOperation\r\n| sort by TimeGenerated desc",
                                "size": 0,
                                "title": "Failed Security Baselines in the latest check",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "rowLimit": 500,
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "Computer"
                                    },
                                    {
                                      "columnId": "BaselineType",
                                      "label": "Baseline Type"
                                    },
                                    {
                                      "columnId": "RuleSeverity",
                                      "label": "Rule Severity"
                                    },
                                    {
                                      "columnId": "Description"
                                    },
                                    {
                                      "columnId": "ActualResult",
                                      "label": "Actual Result"
                                    },
                                    {
                                      "columnId": "ExpectedResult",
                                      "label": "Expected Result"
                                    },
                                    {
                                      "columnId": "AnalyzeOperation",
                                      "label": "Analyze Operation"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 17"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "securityBaselineOptions",
                          "comparison": "isEqualTo",
                          "value": "Security Baseline"
                        },
                        "name": "baseline"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "ProtectionStatus\r\n| where Computer =~ \"{Host}\"\r\n| summarize Count = count() by ThreatStatus",
                                "size": 1,
                                "title": "Host Threat Protection Status - click to filter",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "exportFieldName": "ThreatStatus",
                                "exportParameterName": "TS",
                                "exportDefaultValue": "AllStatus",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "ThreatStatus",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Count",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false,
                                        "maximumFractionDigits": 2,
                                        "maximumSignificantDigits": 3
                                      }
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "name": "query - 0"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "ProtectionStatus\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where ThreatStatus == \"{TS}\" or \"{TS}\" == \"AllStatus\"\r\n| project ThreatStatus, Resource, ScanDate, TypeofProtection, AMProductVersion, ProtectionStatus, ProtectionStatusDetails\r\n| sort by ScanDate",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Host Protection Status Details - filtered by Threat Status",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "ThreatStatus",
                                      "label": "Threat Status"
                                    },
                                    {
                                      "columnId": "Resource"
                                    },
                                    {
                                      "columnId": "ScanDate",
                                      "label": "Scan Date"
                                    },
                                    {
                                      "columnId": "TypeofProtection",
                                      "label": "Type of Protection"
                                    },
                                    {
                                      "columnId": "AMProductVersion",
                                      "label": "AM Product Version"
                                    },
                                    {
                                      "columnId": "ProtectionStatus",
                                      "label": "Protection Status"
                                    },
                                    {
                                      "columnId": "ProtectionStatusDetails",
                                      "label": "Protection Status Details"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 1"
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "securityBaseline"
                          },
                          {
                            "parameterName": "securityBaselineOptions",
                            "comparison": "isEqualTo",
                            "value": "Protection Status"
                          }
                        ],
                        "name": "protectionStatus"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "HostNav",
                    "comparison": "isEqualTo",
                    "value": "securityBaseline"
                  },
                  "name": "securityBaseline"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "0e998788-617f-412a-a435-386106f4ec23",
                              "version": "KqlParameterItem/1.0",
                              "name": "suspiciousChanges",
                              "label": "Suspicious Changes",
                              "type": 10,
                              "description": "Toggle Audit Policy Change and Security Log Clear",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n{ \"value\": \"Audit Policy Change\", \"label\": \"AuditPolChange\", \"selected\":true},\r\n{ \"value\": \"Security Log Clear\", \"label\": \"SecLogClear\"},\r\n{ \"value\": \"User Changes\", \"label\": \"User/GroupChanges\"}\r\n]"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityEvent\r\n| where EventID == \"1102\"\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| parse EventData with * 'SubjectUserName>' SubjectUserName '<' *\r\n| parse EventData with * 'SubjectDomainName>' SubjectDomainName '<' *\r\n| parse EventData with * 'SubjectLogonId>' SubjectLogonId '<' *\r\n| project  TimeGenerated, SubjectDomainName, SubjectUserName, Computer, SubjectLogonId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Security Log Clear Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TimeGenerated",
                                "label": "Time Generated"
                              },
                              {
                                "columnId": "SubjectDomainName",
                                "label": "Subject Domain Name"
                              },
                              {
                                "columnId": "SubjectUserName",
                                "label": "Subject User Name"
                              },
                              {
                                "columnId": "SubjectLogonId",
                                "label": "Subject Logon ID"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "suspiciousChanges",
                          "comparison": "isEqualTo",
                          "value": "Security Log Clear"
                        },
                        "name": "query - 15 - Copy"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "97f331c1-33a9-47c5-8fec-d70ea27ef58d",
                              "version": "KqlParameterItem/1.0",
                              "name": "AuditPolicyChangeType",
                              "label": "Audit Policy Change Type",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SecurityEvent\r\n| where EventID == \"4719\"\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where AccountType != \"Machine\"\r\n| extend AuditPolicyChange = case(AuditPolicyChanges == \"%%8448\", \"Success:disable\", AuditPolicyChanges == \"%%8449\", \"Success:enable\", AuditPolicyChanges == \"%%8450\", \"Failure:disable\", AuditPolicyChanges == \"%%8451\", \"Failure:enable\", \"Failed to Return\")\r\n| summarize by AuditPolicyChange",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "suspiciousChanges",
                            "comparison": "isEqualTo",
                            "value": "Audit Policy Change"
                          },
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "suspiciousChanges"
                          }
                        ],
                        "name": "parameters - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityEvent\r\n| where EventID == \"4719\"\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| extend AuditSubcategory = case(SubcategoryGuid == \"0cce9213-69ae-11d9-bed3-505054503030\", \"IPSec Driver\", SubcategoryGuid == \"0cce9212-69ae-11d9-bed3-505054503030\", \"System Integrity\", SubcategoryGuid == \"0cce923f-69ae-11d9-Bed3-505054503030\", \"Credential Valication\", SubcategoryGuid == \"0cce9241-69ae-11d9-bed3-505054503030\", \"Other Account Logon Events\", SubcategoryGuid == \"0cce9211-69ae-11d9-bed3-505054503030\", \"Security System Extension\", SubcategoryGuid == \"0cce9210-69ae-11d9-bed3-505054503030\", \"Security State Change\", SubcategoryGuid == \"0cce9214-69ae-11d9-bed3-505054503030\", \"Other System Events\", SubcategoryGuid == \"0cce9243-69ae-11d9-bed3-505054503030\", \"Network Policy Server\", SubcategoryGuid == \"0cce921c-69ae-11d9-bed3-505054503030\", \"Other Logon/Logoff\", SubcategoryGuid == \"0cce921b-69ae-11d9-bed3-505054503030\", \"Special Logon\", SubcategoryGuid == \"0cce921a-69ae-11d9-bed3-505054503030\", \"IPsec Extended Mode\", SubcategoryGuid == \"0cce9219-69ae-11d9-bed3-505054503030\", \"IPsec Quick Mode\", SubcategoryGuid == \"0cce9218-69ae-11d9-bed3-505054503030\", \"IPsec Main Mode\", SubcategoryGuid  == \"0cce9217-69ae-11d9-bed3-505054503030\", \"Account Lockout\", SubcategoryGuid == \"0cce9216-69ae-11d9-bed3-505054503030\", \"Logoff\", SubcategoryGuid == \"0cce9215-69ae-11d9-bed3-505054503030\", \"Logon\", SubcategoryGuid == \"0cce9223-69ae-11d9-bed3-505054503030\", \"Handle Manipulation\", SubcategoryGuid == \"0cce9244-69ae-11d9-bed3-505054503030\", \"Detailed File Share\", SubcategoryGuid == \"0cce9227-69ae-11d9-bed3-505054503030\", \"Other Object Access\", SubcategoryGuid == \"0cce9226-69ae-11d9-bed3-505054503030\", \"FIltering Platform Connection\", SubcategoryGuid == \"0cce9225-69ae-11d9-bed3-505054503030\", \"FIltering Platform Packet Drop\", SubcategoryGuid == \"0cce9224-69ae-11d9-bed3-505054503030\", \"File Share\", SubcategoryGuid == \"0cce9222-69ae-11d9-bed3-505054503030\", \"Application Generated\", SubcategoryGuid == \"0cce9221-69ae-11d9-bed3-505054503030\", \"Certificaiton Services\", SubcategoryGuid == \"0cce9220-69ae-11d9-bed3-505054503030\", \"SAM\", SubcategoryGuid == \"0cce921f-69ae-11d9-bed3-505054503030\", \"Kernel Object\", SubcategoryGuid == \"0cce921e-69ae-11d9-bed3-505054503030\", \"Registry\", SubcategoryGuid == \"0cce921d-69ae-11d9-bed3-505054503030\", \"File System\", SubcategoryGuid == \"0cce9229-69ae-11d9-bed3-505054503030\", \"Non Sensitive Privilege Use\", SubcategoryGuid == \"0cce922a-69ae-11d9-bed3-505054503030\" , \"Other Privilege Use Events\", SubcategoryGuid == \"0cce9228-69ae-11d9-bed3-505054503030\", \"Sensitive Privilege Use\", SubcategoryGuid == \"0cce922d-69ae-11d9-bed3-505054503030\", \"DPAPI Activity\", SubcategoryGuid == \"0cce922c-69ae-11d9-bed3-505054503030\", \"Process Termination\", SubcategoryGuid == \"0cce922b-69ae-11d9-bed3-505054503030\", \"Process Creation\", SubcategoryGuid == \"0cce922e-69ae-11d9-bed3-505054503030\", \"RPC Events\", SubcategoryGuid == \"0cce9232-69ae-11d9-bed3-505054503030\", \"MPSSVC Rule-Level Policy Change\", SubcategoryGuid == \"0cce9234-69ae-11d9-bed3-505054503030\", \"Other Policy Change Events\", SubcategoryGuid == \"0cce9233-69ae-11d9-bed3-505054503030\", \"Filtering Platform Policy Change\", SubcategoryGuid == \"0cce922f-69ae-11d9-bed3-505054503030\", \"Audit Policy Change\", SubcategoryGuid == \"0cce9231-69ae-11d9-bed3-505054503030\", \"Authorization Policy Change\", SubcategoryGuid == \"0cce9230-69ae-11d9-bed3-505054503030\", \"Authentication Policy Change\", SubcategoryGuid == \"0cce923a-69ae-11d9-bed3-505054503030\", \"Other Account Management Events\", SubcategoryGuid == \"0cce9239-69ae-11d9-bed3-505054503030\", \"Application Group Management\", SubcategoryGuid == \"0cce9238-69ae-11d9-bed3-505054503030\", \"Distribution Group Management\", SubcategoryGuid == \"0cce9237-69ae-11d9-bed3-505054503030\", \"Security Group Management\", SubcategoryGuid == \"0cce9236-69ae-11d9-bed3-505054503030\", \"Computer Account Mangement\", SubcategoryGuid == \"0cce9235-69ae-11d9-bed3-505054503030\", \"User Account Mangement\", SubcategoryGuid == \"0cce923e-69ae-11d9-bed3-505054503030\", \"Detailed Directory Service Replication\", SubcategoryGuid == \"0cce923b-69ae-11d9-bed3-505054503030\", \"Directory Service Access\", SubcategoryGuid == \"0cce923d-69ae-11d9-bed3-505054503030\", \"Directory Service Replication\", SubcategoryGuid == \"0cce923c-69ae-11d9-bed3-505054503030\", \"Directory Service Changes\", SubcategoryGuid == \"0cce9240-69ae-11d9-bed3-505054503030\", \"Kerberos Service Ticket Operations\", SubcategoryGuid == \"0cce923f-69ae-11d9-bed3-505054503030\", \"Credential Validation\", SubcategoryGuid == \"0cce9242-69ae-11d9-bed3-505054503030\", \"Kerberos Authentication Service\", SubcategoryGuid == \"0cce9245-69ae-11d9-bed3-505054503030\", \"Removable Storage\", SubcategoryGuid == \"0cce9246-69ae-11d9-bed3-505054503030\", \"Central Access Policy Staging\", SubcategoryGuid == \"0cce9247-69ae-11d9-bed3-505054503030\", \"User/Device Claims\", SubcategoryGuid == \"0cce9248-69ae-11d9-Bed3-505054503030\", \"PNP Activity\", SubcategoryGuid == \"0cce9249-69ae-11d9-bed3-505054503030\", \"Group Membership\", \"Failed to Return\")\r\n| extend AuditPolicyChange = case(AuditPolicyChanges == \"%%8448\", \"Success:disable\", AuditPolicyChanges == \"%%8449\", \"Success:enable\", AuditPolicyChanges == \"%%8450\", \"Failure:disable\", AuditPolicyChanges == \"%%8451\", \"Failure:enable\", \"Failed to Return\")\r\n| where AccountType != \"Computer\"\r\n| where 'AuditPolicyChange'==\"All\" or AuditPolicyChange in ({AuditPolicyChangeType})\r\n| project TimeGenerated, AuditSubcategory, AuditPolicyChange, Account, SubjectLogonId\r\n| order by TimeGenerated desc ",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Audit Policy Change Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TimeGenerated",
                                "label": "Time Generated"
                              },
                              {
                                "columnId": "AuditSubcategory",
                                "label": "Audit Subcategory"
                              },
                              {
                                "columnId": "AuditPolicyChange",
                                "label": "Audit Policy Change"
                              },
                              {
                                "columnId": "SubjectLogonId",
                                "label": "Subject Logon ID"
                              }
                            ]
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "HostNav",
                            "comparison": "isEqualTo",
                            "value": "suspiciousChanges"
                          },
                          {
                            "parameterName": "suspiciousChanges",
                            "comparison": "isEqualTo",
                            "value": "Audit Policy Change"
                          }
                        ],
                        "name": "query - 17 - Copy - Copy"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d16f4b45-af6e-4529-b380-77cf46eb8df6",
                              "version": "KqlParameterItem/1.0",
                              "name": "ChangeMaker",
                              "label": "Change Maker",
                              "type": 2,
                              "isRequired": true,
                              "query": "let OnPremEvents = dynamic([4720, 4731, 4732, 4733, 4734, 4735, 4764, 4727, 4737, 4728, 4729, 4730, 4754, 4755, 4756, 4757, 4758]);\r\nSecurityEvent\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where EventID in (OnPremEvents)\r\n| summarize by Account",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "suspiciousChanges",
                          "comparison": "isEqualTo",
                          "value": "User Changes"
                        },
                        "name": "parameters - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityEvent\r\n| where EventID == 4720\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where Account == \"{ChangeMaker:escape}\"//@ or :escape escapes problematic characters\r\n//| where Computer == \"{Host}\"\r\n| parse EventData with * 'TargetUserName>' SubjectUserName '<' *\r\n| extend AccountType = iff(HomePath == \"%%1793\", \"Local\", \"AD\")\r\n| project TimeGenerated, Account, Computer, CreatedAccount=TargetUserName, AccountType\r\n| order by TimeGenerated desc",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Account Creation Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TimeGenerated",
                                "label": "Time Generated"
                              },
                              {
                                "columnId": "CreatedAccount",
                                "label": "Created Account"
                              },
                              {
                                "columnId": "AccountType",
                                "label": "Account Type"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "suspiciousChanges",
                          "comparison": "isEqualTo",
                          "value": "User Changes"
                        },
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let OnPremEvents = dynamic([4731, 4732, 4733, 4734, 4735, 4764, 4727, 4737, 4728, 4729, 4730, 4754, 4755, 4756, 4757, 4758]);\r\nSecurityEvent\r\n| where tolower(Computer) == tolower(\"{Host}\")\r\n| where Account == \"{ChangeMaker:escape}\"//@ or :escape escapes problematic characters\r\n| where EventID in (OnPremEvents)\r\n| extend ImpactedAccount = iff(MemberName == \"-\", MemberSid, MemberName)\r\n| project TimeGenerated, Activity, ChangeMaker=Account, AccountType, Computer, ImpactedAccount, Group=TargetAccount\r\n\r\n//Activity, Account, AccountType, Computer, ChangeMaker=SubjectAccount, TargetGroup=TargetAccount;",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Group Changes Details",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "suspiciousChanges",
                          "comparison": "isEqualTo",
                          "value": "User Changes"
                        },
                        "name": "query - 17 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "HostNav",
                    "comparison": "isEqualTo",
                    "value": "suspiciousChanges"
                  },
                  "name": "SuspiciousChanges"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where Entities contains \"\"\"host\"\"\"\r\n| extend AllEntities = parse_json(Entities)\r\n| mv-expand AllEntities\r\n| where AllEntities.Type == \"host\"\r\n| extend HostEntity = tostring(AllEntities.HostName)\r\n| where HostEntity =~ split(\"{Host}\", \".\", 0)[0]\r\n| project AlertSeverity, AlertName=DisplayName, ProviderName, AlertDetails=Entities, SystemAlertId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Alerts",
                          "noDataMessage": "No Security Alerts were found for the selected IP",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "HuntingBookmark\r\n| where TimeGenerated {TimeRange}\r\n| extend Entities = parse_json(QueryResultRow).__entityMapping\r\n| where Entities contains \"\"\"host\"\"\" //Entity Type to match\r\n| summarize arg_max(TimeGenerated, BookmarkName, Notes, Tags, Entities) by BookmarkId\r\n| extend splitEntities = split(replace(@'[\"{}]', '', tostring(Entities)),',')\r\n| mv-expand splitEntities\r\n| extend splitEntity = split(splitEntities, ':')\r\n| where splitEntity[1] =~ \"host\"\r\n| where splitEntity[0] =~ \"{Host}\"\r\n| project BookmarkName, Notes, Tags",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Bookmarks",
                          "noDataMessage": "No Bookmarks were found for the selected IP",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "HostNav",
                    "comparison": "isEqualTo",
                    "value": "relatedAlerts"
                  },
                  "name": "RelatedAlerts"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EntityType",
              "comparison": "isEqualTo",
              "value": "Host"
            },
            "name": "HostGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "URL Group",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "d492cada-966f-484b-b527-d41ba2ddd1a3",
                        "version": "KqlParameterItem/1.0",
                        "name": "URL",
                        "type": 1,
                        "isRequired": true,
                        "query": "datatable(Entity:string, EntityType:string)\r\n\t[\"{EntityData}\",\"{EntityType}\"]\r\n| where EntityType =~ \"url\" or EntityType =~ \"dns\"\r\n| project Entity",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": "azure"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 8 - Copy"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "0465c9c7-2220-4797-9ac4-a42f94decd28",
                        "cellValue": "URLNav",
                        "linkTarget": "parameter",
                        "linkLabel": "DNS and PAN-OS",
                        "subTarget": "DNS",
                        "style": "link"
                      },
                      {
                        "id": "bc8ae0b0-4f42-4582-8728-79bc9ff857cb",
                        "cellValue": "URLNav",
                        "linkTarget": "parameter",
                        "linkLabel": "IOCs",
                        "subTarget": "IOC",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 5"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "URL DNS Group",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "DnsEvents\r\n| where Name in ('{URL}')\r\n| summarize count() by Computer",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Hostnames",
                          "noDataMessage": "No Threat Intelligence was found for the selected URL.",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart"
                        },
                        "customWidth": "25",
                        "name": "Hostnames"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "DnsEvents\r\n| where Name in ('{URL}')\r\n| summarize count() by ClientIP",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Client IP",
                          "noDataMessage": "No Threat Intelligence was found for the selected URL.",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "leftContent": {
                              "columnMatch": "ClientIP",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "25",
                        "name": "Client IP"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "CommonSecurityLog\r\n| where DeviceProduct == 'PAN-OS'\r\n| where RequestURL contains (\"{URL}\")\r\n| summarize count() by DeviceAction, RequestURL",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "PAN-OS Action",
                          "noDataMessage": "No Threat Intelligence was found for the selected URL.",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "leftContent": {
                              "columnMatch": "ClientIP",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "25",
                        "name": "PAN-OS Action"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "URLNav",
                    "comparison": "isEqualTo",
                    "value": "DNS"
                  },
                  "name": "URL DNS Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ThreatIntelligenceIndicator\r\n| where TimeGenerated > ago(180d)\r\n| where Url contains \"{URL}\"\r\n| summarize arg_max(TimeGenerated, Active) by IndicatorId, SourceSystem, Description, ThreatType, Url\r\n| project SourceSystem, Description, Url, ThreatType, Active",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "URL Threat Intelligence",
                          "noDataMessage": "No Threat Intelligence was found for the selected URL.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - 13 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where TimeGenerated {TimeRange}\r\n| where Entities contains \"\"\"url\"\"\"\r\n| extend AllEntities = parse_json(Entities)\r\n| mv-expand AllEntities\r\n| where AllEntities.Type == \"url\" and AllEntities.Url contains \"{URL}\"\r\n| project AlertSeverity, AlertName=DisplayName, ProviderName, AlertDetails=Entities, SystemAlertId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Alerts",
                          "noDataMessage": "No Security Alerts were found for the selected URL",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "HuntingBookmark\r\n| where TimeGenerated {TimeRange}\r\n| extend Entities = parse_json(QueryResultRow).__entityMapping\r\n| where Entities contains \"\"\"url\"\"\" //Entity Type to match\r\n| summarize arg_max(TimeGenerated, BookmarkName, Notes, Tags, Entities) by BookmarkId\r\n| extend splitEntities = split(replace(@'[{}]', '', tostring(Entities)),',')\r\n| mv-expand splitEntities\r\n| parse splitEntities with * '\"' Url '\":\"' EntityType '\"'\r\n| where EntityType =~ \"url\"\r\n| where Url contains \"{URL}\"\r\n| project BookmarkName, Notes, Tags",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Bookmarks",
                          "noDataMessage": "No Bookmarks were found for the selected URL",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 2 - Copy"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "URLNav",
                    "comparison": "isEqualTo",
                    "value": "IOC"
                  },
                  "name": "URLIOCGroup"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "loadType": "always",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## To use this custom group, switch the group type from \"Editable\" to \"From Template\" and enter the ID of your custom workbook"
                        },
                        "name": "text - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "URLNav",
                    "comparison": "isEqualTo",
                    "value": "Custom"
                  },
                  "name": "CustomGroupAccountURL"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EntityType",
              "comparison": "isEqualTo",
              "value": "URL"
            },
            "name": "URLGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "FileHash Group",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "c10a08a4-2969-41d3-84ba-660bfbe7e621",
                        "version": "KqlParameterItem/1.0",
                        "name": "FileHash",
                        "type": 1,
                        "isRequired": true,
                        "query": "datatable(Entity:string, EntityType:string)\r\n\t[\"{EntityData}\",\"{EntityType}\"]\r\n| where EntityType startswith \"filehash\"\r\n| project Entity",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "56b045e3-0340-4b11-b591-93632bd54cad",
                        "version": "KqlParameterItem/1.0",
                        "name": "HashType",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "ThreatIntelligenceIndicator\r\n| where TimeGenerated > ago(180d)\r\n| where isnotempty(FileHashValue )\r\n| distinct FileHashType",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ]
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "82a6c876-22a4-4c80-a96c-41862e58f8b0",
                        "cellValue": "FileHashNav",
                        "linkTarget": "parameter",
                        "linkLabel": "IOCs",
                        "subTarget": "IOC",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 4"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ThreatIntelligenceIndicator\r\n| where TimeGenerated > ago(180d)\r\n| where FileHashValue =~ \"{FileHash}\"\r\n| where FileHashType in ({HashType})\r\n| summarize arg_max(TimeGenerated, Active) by IndicatorId, SourceSystem, Description, ThreatType, FileHashValue, FileHashType\r\n| project SourceSystem, Description, FileHashValue, FileHashType, ThreatType, Active",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "File Hash Threat Intelligence",
                          "noDataMessage": "No Threat Intelligence was found for the selected File Hash.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where TimeGenerated {TimeRange}\r\n| where Entities contains \"{FileHash}\"\r\n| project AlertSeverity, AlertName=DisplayName, ProviderName, AlertDetails=Entities, SystemAlertId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Related Alerts",
                          "noDataMessage": "No Security Alerts were found for the selected FileHash",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertDetails",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkLabel": "View",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "SystemAlertId",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 2"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "FileHashNav",
                    "comparison": "isEqualTo",
                    "value": "IOC"
                  },
                  "name": "FileHashIOCGroup"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "loadType": "always",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## To use this custom group, switch the group type from \"Editable\" to \"From Template\" and enter the ID of your custom workbook"
                        },
                        "name": "text - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "FileHashNav",
                    "comparison": "isEqualTo",
                    "value": "Custom"
                  },
                  "name": "CustomGroupAccountHash"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EntityType",
              "comparison": "isEqualTo",
              "value": "FileHash"
            },
            "name": "FileHashGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InvestigationType",
        "comparison": "isEqualTo",
        "value": "Entity"
      },
      "name": "Entity Insights"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Hunting Group",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Hunting",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "47b37671-9750-4204-8534-766a21f821dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "KQL",
                        "type": 1,
                        "description": "Run a Query against all selected Workspaces",
                        "isRequired": true,
                        "typeSettings": {
                          "multiLineText": true,
                          "editorLanguage": "kql"
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{KQL}",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "name": "query - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Hunting"
            },
            "name": "Hunting Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Hunting II",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "47b37671-9750-4204-8534-766a21f821dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "KQL",
                        "type": 1,
                        "description": "Run a Query against all selected Workspaces",
                        "isRequired": true,
                        "typeSettings": {
                          "multiLineText": true,
                          "editorLanguage": "kql"
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{KQL}",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "name": "query - 1"
                }
              ]
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Hunting"
            },
            "name": "Hunting Group - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Hunting III",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "47b37671-9750-4204-8534-766a21f821dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "KQL",
                        "type": 1,
                        "description": "Run a Query against all selected Workspaces",
                        "isRequired": true,
                        "typeSettings": {
                          "multiLineText": true,
                          "editorLanguage": "kql"
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{KQL}",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "name": "query - 1"
                }
              ]
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Hunting"
            },
            "name": "Hunting Group - Copy - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Hunting IV",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "47b37671-9750-4204-8534-766a21f821dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "KQL",
                        "type": 1,
                        "description": "Run a Query against all selected Workspaces",
                        "isRequired": true,
                        "typeSettings": {
                          "multiLineText": true,
                          "editorLanguage": "kql"
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{KQL}",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "name": "query - 1"
                }
              ]
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Hunting"
            },
            "name": "Hunting Group - Copy - Copy - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Hunting V",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "47b37671-9750-4204-8534-766a21f821dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "KQL",
                        "type": 1,
                        "description": "Run a Query against all selected Workspaces",
                        "isRequired": true,
                        "typeSettings": {
                          "multiLineText": true,
                          "editorLanguage": "kql"
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{KQL}",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ]
                  },
                  "name": "query - 1"
                }
              ]
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "InvestigationType",
              "comparison": "isEqualTo",
              "value": "Hunting"
            },
            "name": "Hunting Group - Copy - Copy - Copy - Copy"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InvestigationType",
        "comparison": "isEqualTo",
        "value": "Hunting"
      },
      "name": "Hunting Group"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/407e2447-4fff-4720-91ed-833516277d58/resourcegroups/rg_oms/providers/microsoft.operationalinsights/workspaces/mdjdsentinel"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}